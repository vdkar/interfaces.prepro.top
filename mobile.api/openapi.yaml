openapi: 3.0.0
info:
  title: Документация по API для проекта PREPRO
  description: Описание всех методов
  contact:
    email: vdkarpov@gmail.com
  version: 1.0.0
servers:
  - url: 'https://test.prepro.top/api/v1'
    description: Stage сервер
  - url: 'https://prepro.cridex.net/api/v1'
    description: Dev сервер
paths:
  '/templates/calories/{date}':
    get:
      tags:
        - Шаблоны меню (колорийности)
      summary: Генерим меню калорийности на дату и сохраняем за пользователем
      parameters:
        - in: path
          name: date
          description: Дата дня для генерации меню дня
          example: '2021-06-30'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
      security:
        - oAuth: [ ]

  /activity:
    get:
      summary: 1.1. Список возможных типов активностей (упражнений) c фильтром по названию.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 1
                    name: Бег
                    group: Кардио
                    kkal: 200
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Activity - Упражнения и активности
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: 'min:3 Строка поиска.'
                  example: |-
                    Бег

                    В ответе в объекте типа активности (упражнения):
                    id integer идентификатор упражнения,
                    name string название упражнения в текущей локали,
                    kkal integer кол-во сжигаемых ккал за 30 минут,
              required:
                - query
      security: [ ]
    post:
      summary: 1.3. Добавление активности
      description: |-
        При создании активности выбираем тип активности (из списка запроса GET /activity?query=),
        выбираем продолжительность в минутах [1;180] в ползунке или калории [1;1000]
        (ползунки взаимно изменяются по зависимости кол-во Ккал/30 минут),
        дату/время начала (по-умолчанию текущая или можно выбрать в пределах текущей и следующей недели).

        Если пользователь не выбирает повторение, то мы эту активность добавляем в список активностей выбранного дня как невыполненную.
        Если пользователь выбирает повторение, то создаем объект шаблона активности и дни ее повторов в отдельной таблице - таблица повторов активностей пользователя.
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Activity - Упражнения и активности
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                activity_id:
                  type: integer
                  description: ИД активности.
                  example: 1
                date_utc_timestamp:
                  type: integer
                  description: Временная метка в секундах (UTC) даты-времени начала активности.
                  example: 1596240000
                duration:
                  type: integer
                  description: Продолжительность в минутах 1-180.
                  example: 30
                period:
                  type: string
                  description: 'Периодичность - номера выбранных дней недели от 1 до 7 через запятую, если периодичность отключена-пустая строка.'
                  example: '1,3,6'
              required:
                - activity_id
                - date_utc_timestamp
                - duration
                - period
  '/activity/{activity}':
    get:
      summary: 1.2. Подробная информация по типу активности (упражнению)
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 4
                  name: Аква-біг
                  group: Кардіо
                  image: ''
                  video: ''
                  inventory: ''
                  kkal: 259
                properties:
                  id:
                    type: integer
                    example: 4
                  name:
                    type: string
                    example: Аква-біг
                  group:
                    type: string
                    example: Кардіо
                  image:
                    type: string
                    example: ''
                  video:
                    type: string
                    example: ''
                  inventory:
                    type: string
                    example: ''
                  kkal:
                    type: integer
                    example: 259
        '400':
          description: '400'
          content:
            text/plain:
              schema:
                type: string
                example: |-
                  {
                  "code": 400,
                  "message": "BAD_REQUEST"
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Activity - Упражнения и активности
  '/activity/{id}':
    patch:
      summary: 1.4. Редактирование активности
      description: |-
        Мы можем редактировать все, кроме типа активности (упражнения).
        Мы можем редактировать дату/время начала активности (если дата меняется, то активность переносится из этого дня в другой). Дата может быть в будущем в границах текущей и следущей недели.
        Если это была активность,которую добавили разово (без включенных повторений) при включении повторении мы создадим новый шаблон активности
        Если это была активность с повторениями и мы меняем в ней продолжительность/ккал/датувремя/дни повторений -вобщем если хоть что-то меняем, то мы отключаем старый шаблон и создаем новый.
        Если это была активность с повторениями и мы отключаем повторения, то шаблон отключается.
        Когда мы заходим в редактирование из распорядка дня, то мы в любом случае изменяем данные в текущем дне.
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Activity - Упражнения и активности
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date_utc_timestamp:
                  type: integer
                  description: Временная метка в секундах (UTC) даты-времени начала активности.
                  example: 1596240000
                duration:
                  type: integer
                  description: Продолжительность в минутах 1-180.
                  example: 30
                period:
                  type: string
                  description: 'Периодичность - номера выбранных дней недели от 1 до 7 через запятую, если периодичность отключена-пустая строка.'
                  example: '1,3,6'
              required:
                - date_utc_timestamp
                - duration
                - period
    parameters:
      - in: path
        name: id
        description: Optional parameter. integer required Уникальный идентификатор активности в текущем дне.
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: '2201027000'
  /brand:
    get:
      summary: 2.1. Список брендов для фильтра комплексов
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 1
                    name: Solgar
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Brand - Бренды комплексов
  /calories:
    post:
      summary: |-
        3.1. Добавить калории
        Калории можно добавлять только в текущий день.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  kkal: 60.18
                  proteins: 1.01
                  fats: 3.152
                  carbohydrates: 6.967
                  liquid: 100
                properties:
                  kkal:
                    type: number
                    example: 60.18
                  proteins:
                    type: number
                    example: 1.01
                  fats:
                    type: number
                    example: 3.152
                  carbohydrates:
                    type: number
                    example: 6.967
                  liquid:
                    type: integer
                    example: 100
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Calories - Калории
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                kkal:
                  type: number
                  description: Кол-во калориий.
                  example: 30.4
                datetime_utc_timestamp:
                  type: integer
                  description: Временная метка в секундах даты-времени приема калорий.
                  example: 1603783522
              required:
                - kkal
                - datetime_utc_timestamp
  '/calories/{id}':
    delete:
      summary: |-
        3.2. Удалить калории
        Калории можно удалить только в текущем дне.
      description: |-
        Калории могут удаляться (скрываться) только с экрана расписания.
        Если пользователь отметил выполнено, то карточка скрывается из списка, во всех отчетах данные сохраняются.
        Если пользователь не отметил выполнено, то калории не засчитываются, так как во всех отчетах учитываются события,
        после того как пользователь отметил «выполнено».
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  kkal: 60.18
                  proteins: 1.01
                  fats: 3.152
                  carbohydrates: 6.967
                  liquid: 100
                properties:
                  kkal:
                    type: number
                    example: 60.18
                  proteins:
                    type: number
                    example: 1.01
                  fats:
                    type: number
                    example: 3.152
                  carbohydrates:
                    type: number
                    example: 6.967
                  liquid:
                    type: integer
                    example: 100
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Calories - Калории
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ID приема калорий в текущем дне.
                  example: 201027000
              required:
                - id
  '/complex/{complex}':
    get:
      summary: 4.1. Экран комплекса
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 319
                  images:
                    - img1
                    - img2
                  group: Комплекс
                  name: 'Male Multiple, 180 таблеток'
                  brand: Solgar
                  contains:
                    qtt: 180
                    form: Таблетки
                  portion:
                    qtt: 3
                    form: таблетки
                  q_min: 1
                  q_max: 6
                  q_step: 1
                  q_qtt: 1
                  materials:
                    - id: 1673
                      name: Название вещества
                      tradename: Название на банке
                      qtt: 150
                      measure:
                        id: 3
                        name: миллиграмм
                        short: мг
                properties:
                  id:
                    type: integer
                    example: 319
                  images:
                    type: array
                    example:
                      - img1
                      - img2
                    items:
                      type: string
                  group:
                    type: string
                    example: Комплекс
                  name:
                    type: string
                    example: 'Male Multiple, 180 таблеток'
                  brand:
                    type: string
                    example: Solgar
                  contains:
                    type: object
                    example:
                      qtt: 180
                      form: Таблетки
                  portion:
                    type: object
                    example:
                      qtt: 3
                      form: таблетки
                  q_min:
                    type: integer
                    example: 1
                  q_max:
                    type: integer
                    example: 6
                  q_step:
                    type: integer
                    example: 1
                  q_qtt:
                    type: integer
                    example: 1
                  materials:
                    type: array
                    example:
                      - id: 1673
                        name: Название вещества
                        tradename: Название на банке
                        qtt: 150
                        measure:
                          id: 3
                          name: миллиграмм
                          short: мг
                    items:
                      type: object
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Complex - Комлексы
  /barcode/search:
    post:
      tags:
        - Complex - Комлексы
      summary: Ищем по шрихкоду
      parameters:
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BarcodeSearch'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: numeric
                  description: Штрикод.
                  example: '033984017351'

      security:
        - oAuth: [ ]

  /courses:
    post:
      summary: 5.1. Создание курса
      description: ''
      parameters:
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                properties:
                  id:
                    type: integer
                    example: 1
                    description: Идентификатор созданного курса
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Course - Курсы
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                qtt:
                  type: numeric
                  description: Порция.
                  example: '1'
                complex_id:
                  type: integer
                  description: ИД комплекса.
                  example: 1
                date_utc_timestamp:
                  type: integer
                  description: Временная метка в UTC даты начала приема.
                  example: 1596240000
                breakfast:
                  type: integer
                  description: Завтрак 0|1.
                  example: 1
                lunch:
                  type: integer
                  description: Обед 0|1.
                  example: 0
                dinner:
                  type: integer
                  description: Ужин 0|1.
                  example: 1
                moment:
                  type: string
                  description: Момент приема пищи before_meal|while_meal|after_meal.
                  example: before_meal
                period:
                  type: string
                  description: Периодичность - номера выбранных дней недели от 1 до 7 через запятую.
                  example: '1,3,6'
                days:
                  type: integer
                  description: Продолжительность курса в днях от 1 до 90 дней.
                  example: 30
              required:
                - qtt
                - complex_id
                - date_utc_timestamp
                - breakfast
                - moment
                - period
                - days
  /courses/active:
    get:
      summary: |-
        5.6. Список активных курсов
        Активным считается курс, период действия которого -
        настоящий или будущий и он со статусом - ВКЛ
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 3
                    complex_id: 923
                    name: 'Цитрат кальцію з вітаміном D3, 60 таблеток'
                    brand: Solgar
                    active: false
                    from: '2020-07-30'
                    to: '2020-10-28'
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Course - Курсы
  /courses/created:
    get:
      summary: |-
        5.7. Список созданных курсов
        В созданных отображаются неактивные курсы пользователя, которые - он сам создал.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 3
                    complex_id: 923
                    name: 'Цитрат кальцію з вітаміном D3, 60 таблеток'
                    brand: Solgar
                    active: false
                    from: '2020-07-30'
                    to: '2020-10-28'
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Course - Курсы
  '/courses/{id}':
    get:
      summary: 5.2. Вся информация по курсу
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                  name: 'Цитрат кальцію з вітаміном D3, 60 таблеток'
                  brand: Solgar
                  active: false
                  from: '2020-08-01'
                  to: '2020-10-30'
                  complex_id: 923
                  qtt: 1
                  breakfast: true
                  lunch: false
                  dinner: true
                  moment: while_meal
                  period: '1'
                  days: 30
                properties:
                  id:
                    type: integer
                    example: 3
                  name:
                    type: string
                    example: 'Цитрат кальцію з вітаміном D3, 60 таблеток'
                  brand:
                    type: string
                    example: Solgar
                  active:
                    type: boolean
                    example: false
                  from:
                    type: string
                    example: '2020-08-01'
                  to:
                    type: string
                    example: '2020-10-30'
                  complex_id:
                    type: integer
                    example: 923
                  qtt:
                    type: integer
                    example: 1
                  breakfast:
                    type: boolean
                    example: true
                  lunch:
                    type: boolean
                    example: false
                  dinner:
                    type: boolean
                    example: true
                  moment:
                    type: string
                    example: while_meal
                  period:
                    type: string
                    example: '1'
                  days:
                    type: integer
                    example: 30
        '400':
          description: '400'
          content:
            text/plain:
              schema:
                type: string
                example: |-
                  {
                  "code": 400,
                  "message": "BAD_REQUEST"
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Course - Курсы
    patch:
      summary: 5.3. Редактировать неактивный курс
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                properties:
                  id:
                    type: integer
                    example: 3
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Course - Курсы
      security: [ ]
    delete:
      summary: |-
        5.5. Удалить курс
        Из расписания при удалении курса в прошлом удаляется то, что не было выполнено по этому курсу
        Все что было выполнено до момента удаления - остаётся
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Course - Курсы
      security: [ ]
  '/courses/{id}/deactivate':
    post:
      summary: |-
        5.4. Деактивировать курс
        Активировать курс нельзя, но можно его редактировать
        Из расписания при деактивации курса в прошлом удаляется то, что не было выполнено по этому курсу
        Все что было выполнено до момента удаления - остаётся
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 3
                properties:
                  id:
                    type: integer
                    example: 3
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Course - Курсы
      security: [ ]
  /diets:
    get:
      summary: 6.1. Экран планы питания - Список диет
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 35
                    name: Средиземноморская диета
                  - id: 36
                    name: Вегетарианская
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Diets - Диеты
  '/diets/{id}':
    get:
      summary: 6.2. Экран планы питания - Планы питания выбранной диеты с подгрузкой
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 1
                    name: Menu for the week - №1
                    kkal: 20.03
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Diets - Диеты
    parameters:
      - in: path
        name: offset
        description: Optional parameter. integer Сдвиг подгрузки (сколько уже было загружено на данный момент)
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: sunt
      - in: path
        name: id
        description: Optional parameter. integer required ИД диеты
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: ut
  '/dish/{dish}':
    get:
      summary: |-
        7.3. Экран блюда
        available 1-пользовательский 2- общий
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 4
                  is_favorite: false
                  available: 1
                  name: Салат из моркови с орехами
                  image: ''
                  weight: 372.4
                  main_unit:
                    id: 1
                    name: г
                    short: г
                    q_min: 1
                    q_max: 500
                    q_step: 1
                    q_qtt: 100
                    koef_gramm: 1
                  measures:
                    - id: 22
                      name: Порция
                      short: Порция
                      q_min: 0.5
                      q_max: 10
                      q_step: 0.5
                      q_qtt: 0.5
                      koef_gramm: 100
                  kpfc:
                    kkal: 264.69
                    proteins:
                      qtt: 3.83
                      pcent: 11.11
                    fats:
                      qtt: 24.57
                      pcent: 82.05
                    carbohydrates:
                      qtt: 9.84
                      pcent: 28.14
                  materials:
                    - name: Активные вещества
                      items:
                        - id: 102
                          name: Бетаин
                          qtt: 0
                          pcent: 0
                          measure:
                            id: 3
                            name: миллиграмм
                            short: мг
                    - name: Аминокислоты
                      items:
                        - id: 57
                          name: Аланин
                          qtt: 0.203
                          pcent: 0
                          measure:
                            id: 1
                            name: г
                            short: г
                  ingredients:
                    - id: 58
                      name: Йогурт
                      qtt: 200
                      measure:
                        id: 28
                        name: Миллилитры
                        short: Миллилитры
                  video: ''
                  steps:
                    - id: 3
                      description: Морковь натереть на крупной терке.
                      image: ''
                properties:
                  id:
                    type: integer
                    example: 4
                  is_favorite:
                    type: boolean
                    example: false
                  available:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Салат из моркови с орехами
                  image:
                    type: string
                    example: ''
                  weight:
                    type: number
                    example: 372.4
                  main_unit:
                    type: object
                    example:
                      id: 1
                      name: г
                      short: г
                      q_min: 1
                      q_max: 500
                      q_step: 1
                      q_qtt: 100
                      koef_gramm: 1
                  measures:
                    type: array
                    example:
                      - id: 22
                        name: Порция
                        short: Порция
                        q_min: 0.5
                        q_max: 10
                        q_step: 0.5
                        q_qtt: 0.5
                        koef_gramm: 100
                    items:
                      type: object
                  kpfc:
                    type: object
                    example:
                      kkal: 264.69
                      proteins:
                        qtt: 3.83
                        pcent: 11.11
                      fats:
                        qtt: 24.57
                        pcent: 82.05
                      carbohydrates:
                        qtt: 9.84
                        pcent: 28.14
                  materials:
                    type: array
                    example:
                      - name: Активные вещества
                        items:
                          - id: 102
                            name: Бетаин
                            qtt: 0
                            pcent: 0
                            measure:
                              id: 3
                              name: миллиграмм
                              short: мг
                      - name: Аминокислоты
                        items:
                          - id: 57
                            name: Аланин
                            qtt: 0.203
                            pcent: 0
                            measure:
                              id: 1
                              name: г
                              short: г
                    items:
                      type: object
                  ingredients:
                    type: array
                    example:
                      - id: 58
                        name: Йогурт
                        qtt: 200
                        measure:
                          id: 28
                          name: Миллилитры
                          short: Миллилитры
                    items:
                      type: object
                  video:
                    type: string
                    example: ''
                  steps:
                    type: array
                    example:
                      - id: 3
                        description: Морковь натереть на крупной терке.
                        image: ''
                    items:
                      type: object
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Dish - Блюда
    delete:
      summary: 7.7. Удаление созданного блюда
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: [ ]
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Dish - Блюда
  /dish/ingredients:
    get:
      summary: 7.4. Получение ингредиентов по строке поиска
      description: ''
      parameters:
        - in: query
          name: name
          description: query required Строка поиска.
          example: суп
          required: false
          schema:
            type: string
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 10
                    name: Яйце куряче
                    image: ''
                    kkal: 0
                    main_unit:
                      id: 1
                      name: грами
                      short: г
                      type: 1
                      q_min: 1
                      q_max: 500
                      q_step: 5
                      q_qtt: 100
                      koef_gramm: 1
                    measures:
                      - id: 11
                        name: шт (великий)
                        short: шт (великий)
                        type: 2
                        q_min: 0
                        q_max: 10
                        q_step: 0.5
                        q_qtt: 1
                        koef_gramm: 50
                    cook_methods:
                      - id: boil
                        name: Варка
                        koef: 1.123
                      - id: fry
                        name: Жарка
                        koef: 0.9
                      - id: stew
                        name: Тушение
                        koef: 1
                      - id: bake
                        name: Запекание
                        koef: 1
      tags:
        - Dish - Блюда
  /dish/categories:
    get:
      summary: 7.5. Получение категорий блюд
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 33
                    name: Суп або бульйон
                  - id: 34
                    name: Салат
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Dish - Блюда
  /dish/created:
    get:
      summary: 7.1. Список созданных блюд
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 202
                    type: dish
                    name: Французский луковый суп
                    image: 'https://127.0.0.1:8000/storage/uploads/dish/0/202-dishes20200702123230.jpg'
                    kkal: 81.44
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Dish - Блюда
  /dish/imported:
    get:
      summary: 7.2. Список импортированных блюд
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 202
                    type: dish
                    name: Французский луковый суп
                    image: 'https://127.0.0.1:8000/storage/uploads/dish/0/202-dishes20200702123230.jpg'
                    kkal: 81.44
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Dish - Блюда
  /dish:
    post:
      summary: 7.6. Сохранение блюда
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example: [ ]
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Dish - Блюда
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Название.
                  example: Французский луковый суп
                image:
                  type: string
                  format: binary
                  description: Фото.
                portions:
                  type: integer
                  description: Кол-во порций.
                  example: 0
                category_id:
                  type: integer
                  description: ИД Категории из запроса /dish/categories .
                  example: 33
                ingredients:
                  type: array
                  description: 'Массив ингредиентов, где каждый ингредиент - это объект из четырех ключей: обязательно id - идентификатор продукта-ингредиента,необязательный cook_method - способ приготовления string из возможный для ингредиента, обязательно qtt - кол-во, обязательный measure_id - ИД единицы измерения.'
                  example: [ ]
                  items:
                    type: object
                steps:
                  type: array
                  description: 'Массив шагов приготовления, где каждый шаг - это объект из двух ключей: необязательное фото image и обязательное description описание шага string, ограничение 65535 в базе.'
                  example: [ ]
                  items:
                    type: object
              required:
                - name
                - image
                - portions
                - category_id
                - steps
  /drinks:
    get:
      summary: 8.1. Список напитков для баланса жидкостей
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 72
                  image: ''
                  name: Вода
                  portion: 100
                properties:
                  id:
                    type: integer
                    example: 72
                  image:
                    type: string
                    example: ''
                  name:
                    type: string
                    example: Вода
                  portion:
                    type: integer
                    example: 100
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Drinks - Баланс жидкости
  '/drinks/{drink}':
    delete:
      summary: 8.6. Убрать жидкость из избранного
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Drinks - Баланс жидкости
  '/drinks/{drink}/portion':
    post:
      summary: 8.4. Редактировать избранную порцию
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Drinks - Баланс жидкости
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                portion:
                  type: integer
                  description: Порция в мл.
                  example: 100
              required:
                - portion
    delete:
      summary: 8.5. Сбросить избранную порцию в избранном напитке
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Drinks - Баланс жидкости
  '/drinks/{drink}/drink':
    post:
      summary: 8.2. Добавить выпитую жидкость
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  kkal: 60.18
                  proteins: 1.01
                  fats: 3.152
                  carbohydrates: 6.967
                  liquid: 100
                properties:
                  kkal:
                    type: number
                    example: 60.18
                  proteins:
                    type: number
                    example: 1.01
                  fats:
                    type: number
                    example: 3.152
                  carbohydrates:
                    type: number
                    example: 6.967
                  liquid:
                    type: integer
                    example: 100
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Drinks - Баланс жидкости
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                portion:
                  type: integer
                  description: Порция в мл.
                  example: 100
              required:
                - portion
  /drinks/cancel:
    post:
      summary: 8.3. Отменить последнюю выпитую жидкость
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  kkal: 60.18
                  proteins: 1.01
                  fats: 3.152
                  carbohydrates: 6.967
                  liquid: 100
                properties:
                  kkal:
                    type: number
                    example: 60.18
                  proteins:
                    type: number
                    example: 1.01
                  fats:
                    type: number
                    example: 3.152
                  carbohydrates:
                    type: number
                    example: 6.967
                  liquid:
                    type: integer
                    example: 100
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Drinks - Баланс жидкости
  '/eating/{date}':
    post:
      summary: 9.1. Добавить прием пищи
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 9
                  name: мой перекус1
                  time: '12:00:00'
                  kkal: 0
                  contains: [ ]
                properties:
                  id:
                    type: integer
                    example: 9
                  name:
                    type: string
                    example: мой перекус1
                  time:
                    type: string
                    example: '12:00:00'
                  kkal:
                    type: integer
                    example: 0
                  contains:
                    type: array
                    example: [ ]
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Eatings - Приемы пищи в меню
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Название приема пищи.
                  example: Перекус
                time:
                  type: string
                  description: Время приема пищи.
                  example: '13:15:00'
              required:
                - time
  '/eating/{date}/{eatingcat}':
    patch:
      summary: 9.2. Редактировать название или время приема пищи
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Eatings - Приемы пищи в меню
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Название приема пищи.
                  example: Перекус
                time:
                  type: string
                  description: Время приема пищи.
                  example: '13:15:00'
              required:
                - time
    delete:
      summary: 9.3. Удалить прием пищи из дня
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Eatings - Приемы пищи в меню
  /favorites:
    get:
      summary: 10.3. Список избранных продуктов/блюд
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 1
                    type: product
                    name: ''
                    image: ''
                    kkal: 20.03
                    is_favorite: true
                  - id: 4
                    type: dish
                    name: Салат з моркви з горіхами
                    image: ''
                    kkal: 264.69
                    is_favorite: true
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Favorites - Избранное
    post:
      summary: 10.1. Добавление в избранное продукта/блюда
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Favorites - Избранное
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content_id:
                  type: integer
                  description: ИД редактируемого элемента (продукта или блюда).
                  example: 1
                content_type:
                  type: string
                  description: Тип элемента (product или dish).
                  example: product
              required:
                - content_id
                - content_type
    delete:
      summary: 10.2. Удаление из избранного продукта/блюда
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Favorites - Избранное
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content_id:
                  type: integer
                  description: ИД редактируемого элемента (продукта или блюда).
                  example: 2
                content_type:
                  type: string
                  description: Тип элемента (product или dish).
                  example: dish
              required:
                - content_id
                - content_type
  /feedback:
    post:
      summary: 11.1. Создание обращения в поддержку
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
      tags:
        - Feedback - Сообщения обратной связи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: Идентификатор пользователя (если залогинен).
                  example: 1
                name:
                  type: string
                  description: Имя (для зарегистрированного указывать имя текущего пользователя).
                  example: Имя
                email:
                  type: string
                  description: Email (для зарегистрированного указывать email текущего пользователя).
                  example: email@test.com
                message:
                  type: string
                  description: Сообщение.
                  example: 'Текст с минимальным кол-вом символов 30, максимальным - 65535'
              required:
                - name
                - email
                - message
      security: [ ]
  '/material/{materialFull}':
    get:
      summary: 13.1. Свойства вещества
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 13
                  name: Холестерол
                  image: ''
                  type:
                    id: 44
                    name: Екстракти
                  group: Вещество
                  description: 'Холестерин — стабилизатор плазматической мембраны клеток, открывает цепь биосинтеза стероидных половых гормонов и кортикостероидов, служит основой для образования желчных кислот и витаминов группы D, участвует в регулировании проницаемости клеток и предохраняет эритроциты крови от действия гемолитических ядов.'
                  resource:
                    - name: Википедия
                      link: 'https://ru.wikipedia.org/wiki/Холестерин'
                    - name: Вікіпедія
                      link: 'https://uk.wikipedia.org/wiki/Холестерол'
                  norms:
                    - firstColumn: Младенцы
                      secondColumn: Дети
                      rows:
                        - title: 0-6 мic
                          column1:
                            value: 65 мкг DFE
                            user_group: false
                          column2:
                            value: ''
                            user_group: false
                        - title: 6-12 мic
                          column1:
                            value: 80 мкг DFE
                            user_group: false
                          column2:
                            value: ''
                            user_group: false
                        - title: 1-3
                          column1:
                            value: ''
                            user_group: false
                          column2:
                            value: 150 мкг DFE
                            user_group: false
                        - title: 4-8
                          column1:
                            value: ''
                            user_group: false
                          column2:
                            value: 200 мкг DFE
                            user_group: false
                    - firstColumn: Мужчины
                      secondColumn: Женщины
                      rows: [ ]
                    - firstColumn: Беременность
                      secondColumn: Лактация
                      rows: [ ]
                  main_unit:
                    id: 10
                    name: мкг DFE
                    short: мкг DFE
                    type: 1
                    q_min: 1
                    q_max: 500
                    q_step: 10
                    q_qtt: 100
                    koef_gramm: 6.e-7
                  measures:
                    - id: 8
                      name: мкг
                      short: мкг DFE
                      type: 1
                      q_min: 1
                      q_max: 500
                      q_step: 10
                      q_qtt: 100
                      koef_gramm: 0
                properties:
                  id:
                    type: integer
                    example: 13
                  name:
                    type: string
                    example: Холестерол
                  image:
                    type: string
                    example: ''
                  type:
                    type: object
                    example:
                      id: 44
                      name: Екстракти
                  group:
                    type: string
                    example: Вещество
                  description:
                    type: string
                    example: 'Холестерин — стабилизатор плазматической мембраны клеток, открывает цепь биосинтеза стероидных половых гормонов и кортикостероидов, служит основой для образования желчных кислот и витаминов группы D, участвует в регулировании проницаемости клеток и предохраняет эритроциты крови от действия гемолитических ядов.'
                  resource:
                    type: array
                    example:
                      - name: Википедия
                        link: 'https://ru.wikipedia.org/wiki/Холестерин'
                      - name: Вікіпедія
                        link: 'https://uk.wikipedia.org/wiki/Холестерол'
                    items:
                      type: object
                  norms:
                    type: array
                    example:
                      - firstColumn: Младенцы
                        secondColumn: Дети
                        rows:
                          - title: 0-6 мic
                            column1:
                              value: 65 мкг DFE
                              user_group: false
                            column2:
                              value: ''
                              user_group: false
                          - title: 6-12 мic
                            column1:
                              value: 80 мкг DFE
                              user_group: false
                            column2:
                              value: ''
                              user_group: false
                          - title: 1-3
                            column1:
                              value: ''
                              user_group: false
                            column2:
                              value: 150 мкг DFE
                              user_group: false
                          - title: 4-8
                            column1:
                              value: ''
                              user_group: false
                            column2:
                              value: 200 мкг DFE
                              user_group: false
                      - firstColumn: Мужчины
                        secondColumn: Женщины
                        rows: [ ]
                      - firstColumn: Беременность
                        secondColumn: Лактация
                        rows: [ ]
                    items:
                      type: object
                  main_unit:
                    type: object
                    example:
                      id: 10
                      name: мкг DFE
                      short: мкг DFE
                      type: 1
                      q_min: 1
                      q_max: 500
                      q_step: 10
                      q_qtt: 100
                      koef_gramm: 6.e-7
                  measures:
                    type: array
                    example:
                      - id: 8
                        name: мкг
                        short: мкг DFE
                        type: 1
                        q_min: 1
                        q_max: 500
                        q_step: 10
                        q_qtt: 100
                        koef_gramm: 0
                    items:
                      type: object
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Material - Вещества
  '/material/{material}/products':
    get:
      summary: '13.2. Список продуктов с указанным веществом с подгрузкой. {material}-integer ИД вещества, которое должно содержаться в продукте'
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 10
                    image: ''
                    name: 'Яйце, куряче'
                    material:
                      qtt: 372
                      measure:
                        id: 3
                        name: миллиграмм
                        short: мг
                  - id: 11
                    image: ''
                    name: 'Яйце, куряче, смажене'
                    material:
                      qtt: 401
                      measure:
                        id: 3
                        name: мг
                        short: мг
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Material - Вещества
    parameters:
      - in: path
        name: offset
        description: Optional parameter. integer Сдвиг подгрузки (сколько уже было загружено на данный момент) - для подгрузки
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: beatae
  '/material/{material}/complexes':
    get:
      summary: 13.3. Список комплексов с указанным веществом с подгрузкой и фильтром
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 17
                    type: complex
                    name: 'Children''s Multi-Vitamin & Mineral Gummies, 120 цукерок'
                    image: ''
                    brand: Solgar
                    material:
                      qtt: 1667
                      measure:
                        id: 10
                        name: мкг DFE
                        short: мкг DFE
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Material - Вещества
    parameters:
      - in: path
        name: offset
        description: Optional parameter. integer Сдвиг подгрузки (сколько уже было загружено на данный момент) - для подгрузки
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: reiciendis
      - in: path
        name: material_id
        description: 'Optional parameter. integer required ИД вещества, которое должно содержаться в комплексе.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: '7'
      - in: path
        name: qtt
        description: Optional parameter. numeric Дозировка.
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: '100'
      - in: path
        name: measure_id
        description: Optional parameter. integer ИД единицы измерения из ползунка.
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: '1'
      - in: path
        name: brand_id
        description: Optional parameter. array Массив выбранных в фильтре брендов.
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: 'brand_id[]=1&brand_id[]=2'
  /nutrition/search/categories:
    get:
      summary: 14.8. Категории для фильтра поиска продуктов/блюд для добавления в меню/план питания.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 33
                    name: Soup or broth
                  - id: 34
                    name: Salad
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Menu - Меню
  /nutrition/search:
    post:
      summary: '14.9. Поиск по продуктам, блюдам для добавления в меню/план питания.'
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 1
                    type: product
                    name: ''
                    image: ''
                    kkal: 20.03
                    is_favorite: true
                    category_id: 54
                    category: Інше
                  - id: 4
                    type: dish
                    name: Салат з моркви з горіхами
                    image: ''
                    kkal: 264.69
                    is_favorite: false
                    category_id: 54
                    category: Інше
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Menu - Меню
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: 'min:3 Строка поиска.'
                  example: Редиска
              required:
                - query
    parameters:
      - in: path
        name: cat_id
        description: Optional parameter. array Массив выбранных в фильтре категорий.
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: 'cat_id[]=1&cat_id[]=2'
      - in: path
        name: order
        description: Optional parameter. string Порядок сортировки по по ккал на 100г.
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: desc
  /menu:
    get:
      summary: 14.2. Получить меню на 2 недели
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - day: '2020-05-03'
                    in_shoplist: false
                    kpfc:
                      kkal: 0
                      proteins:
                        qtt: 0
                        pcent: 0
                      fats:
                        qtt: 0
                        pcent: 0
                      carbohydrates:
                        qtt: 0
                        pcent: 0
                    eatings:
                      - name: Завтрак
                        time: '09:00:00'
                        kkal: 0
                        contains: [ ]
                      - name: Обед
                        time: '13:00:00'
                        kkal: 0
                        contains: [ ]
                      - name: Первый перекус
                        time: '11:00:00'
                        kkal: 0
                        contains: [ ]
                      - name: Ужин
                        time: '18:00:00'
                        kkal: 0
                        contains: [ ]
                      - name: Второй перекус
                        time: '15:00:00'
                        kkal: 0
                        contains: [ ]
                      - name: Перед сном
                        time: '20:00:00'
                        kkal: 0
                        contains: [ ]
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Menu - Меню
    post:
      summary: 14.1. Сохранить меню.
      description: |-
        Сохранение меню - это создание из меню пользовательского плана питания.
        Дата первого дня должна входить в текущую и следующую неделю.
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Menu - Меню
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                monday:
                  type: string
                  description: Дата первого дня сохраняемого меню.
                  example: '2020-05-01'
              required:
                - monday
  '/menu/{date}':
    get:
      summary: Меню дня
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            text/plain:
              schema:
                type: string
                example: |-
                  {
                  "day": "2020-05-15",
                  "in_shoplist": true,
                  "kpfc": {
                    "kkal": 0,
                    "proteins": {
                        "qtt": 0,
                        "pcent": 0
                    },
                    "fats": {
                        "qtt": 0,
                        "pcent": 0
                    },
                    "carbohydrates": {
                        "qtt": 0,
                        "pcent": 0
                    }
                  },
                  "eatings": [
                    {
                        "name": "Завтрак",
                        "time": "09:00:00",
                        "kkal": 325.828,
                        "contains": [
                            {
                                "id": 74,
                                "type": "product",
                                "name": "Хлеб, пшеничный, цельнозерновой",
                                "image": "https://127.0.0.1:8000/storage/uploads/product/0/74-product20200217203330.jpg",
                                "measure": {
                                    "id": 1,
                                    "name": "г"
                                },
                                "main_unit": {
                                   "id": 1,
                                   "name": "граммы",
                                    "short": "г",
                                   "type": 1,
                                   "q_min": 1,
                                   "q_max": 500,
                                   "q_step": 5,
                                   "q_qtt": 100,
                                   "koef_gramm": 1
                               },
                               "measures": [
                                   {
                                       "id": 22,
                                       "name": "порция",
                                       "short": "порц",
                                       "type": 2,
                                       "q_min": 0.5,
                                       "q_max": 5,
                                       "q_step": 0.5,
                                       "q_qtt": 1,
                                       "koef_gramm": 100
                                   }
                               ],
                                "qtt": 20,
                                "kkal": 50.4
                            },
                            {
                                "id": 26,
                                "type": "dish",
                                "name": "Салат из пекинской капусты с огурцами",
                                "image": "https://127.0.0.1:8000/storage/uploads/dish/0/26-dishes20200413163355.jpg",
                                "measure": {
                                    "id": 1,
                                    "name": "г"
                                },
                                "qtt": 100,
                                "kkal": 27.208
                            }
                        ]
                    },
                    {
                        "name": "Первый перекус",
                        "time": "11:00:00",
                        "kkal": 378.226,
                        "contains": [
                            {
                                "id": 143,
                                "type": "product",
                                "name": "Йогурт греческий 2,5%, ванильный",
                                "image": "https://127.0.0.1:8000/storage/uploads/product/0/143-product20200225140948.jpg",
                                "measure": {
                                    "id": 1,
                                    "name": "г"
                                },
                  *              "main_unit": {
                                   "id": 1,
                                   "name": "граммы",
                                    "short": "г",
                                   "type": 1,
                                   "q_min": 1,
                                   "q_max": 500,
                                   "q_step": 5,
                                   "q_qtt": 100,
                                   "koef_gramm": 1
                               },
                               "measures": [
                                   {
                                       "id": 22,
                                       "name": "порция",
                                       "short": "порц",
                                       "type": 2,
                                       "q_min": 0.5,
                                       "q_max": 5,
                                       "q_step": 0.5,
                                       "q_qtt": 1,
                                       "koef_gramm": 100
                                   }
                               ],
                                "qtt": 20,
                                "kkal": 50.4
                            },
                                "qtt": 150,
                                "kkal": 142.5
                            }
                        ]
                    }
                  ]
                  }
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Menu - Меню
    parameters:
      - in: path
        name: date
        description: Optional parameter. string required Дата в формате YYYY-MM-DD
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: fugiat
    delete:
      tags:
        - Menu - Меню
      summary: Удаляем все продукты из меню дня за определенную дату
      parameters:
        - name: date
          description: Дата дня
          example: '2021-06-30'
      security:
        - oAuth: [ ]
  /menu/put:
    post:
      summary: 14.5. Добавить продукт/блюдо в меню
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Menu - Меню
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: date
                  description: Дата в формате Y-m-d интервал текущая и следующая неделя.
                  example: '2020-05-31'
                eatingcat_id:
                  type: integer
                  description: ИД приема пищи.
                  example: 1
                qtt:
                  type: numeric
                  description: Кол-во продукта/блюда.
                  example: '50'
                measure_id:
                  type: integer
                  description: Единица измерения продукта/блюда.
                  example: 1
                content_id:
                  type: integer
                  description: ИД продукта/блюда.
                  example: 26
                content_type:
                  type: string
                  description: Тип product/dish продукт или блюдо.
                  example: dish
              required:
                - day
                - eatingcat_id
                - qtt
                - measure_id
                - content_id
                - content_type
  /menu/edit:
    post:
      summary: 14.6. Изменить продукт/блюдо в меню
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Menu - Меню
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: date
                  description: Дата в формате Y-m-d интервал текущая и следующая неделя.
                  example: '2020-05-31'
                eatingcat_id:
                  type: integer
                  description: ИД приема пищи.
                  example: 1
                qtt:
                  type: numeric
                  description: Кол-во продукта/блюда.
                  example: '50'
                measure_id:
                  type: integer
                  description: Единица измерения продукта/блюда.
                  example: 1
                old_measure_id:
                  type: integer
                  description: Единица измерения продукта/блюда до редактирования.
                  example: 1
                content_id:
                  type: integer
                  description: ИД продукта/блюда.
                  example: 26
                content_type:
                  type: string
                  description: Тип product/dish продукт или блюдо.
                  example: dish
              required:
                - day
                - eatingcat_id
                - qtt
                - measure_id
                - old_measure_id
                - content_id
                - content_type
  /menu/pop:
    post:
      summary: 14.7. Удалить продукт/блюдо из меню
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Menu - Меню
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: date
                  description: Дата в формате Y-m-d интервал текущая и следующая неделя.
                  example: '2020-05-31'
                eatingcat_id:
                  type: integer
                  description: ИД приема пищи.
                  example: 1
                measure_id:
                  type: integer
                  description: Единица измерения продукта/блюда.
                  example: 1
                content_id:
                  type: integer
                  description: ИД продукта/блюда.
                  example: 26
                content_type:
                  type: string
                  description: Тип product/dish продукт или блюдо.
                  example: dish
              required:
                - day
                - eatingcat_id
                - measure_id
                - content_id
                - content_type
  '/menu//{date}':

  /user/daystat:
    get:
      summary: 14.4. Параметры КБЖУ и жидкость за день.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  kkal: 0
                  proteins: 0
                  fats: 0
                  carbohydrates: 0
                  liquid: 0
                properties:
                  kkal:
                    type: integer
                    example: 0
                  proteins:
                    type: integer
                    example: 0
                  fats:
                    type: integer
                    example: 0
                  carbohydrates:
                    type: integer
                    example: 0
                  liquid:
                    type: integer
                    example: 0
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Menu - Меню
  /nutrition/set:
    post:
      summary: 15.3. Установка плана питания
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                plan_id:
                  type: integer
                  description: ИД плана питания
                  example: 12
                from:
                  type: string
                  description: 'С какого дня устанавливать tomorrow-с завтрашнего, nextweek-со следущей недели'
                  example: fugiat
              required:
                - plan_id
                - from
  '/nutrition/plans/{plan}':
    patch:
      summary: 15.4. Редактировать название сохраненного меню (плана питания)
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Название.
                  example: Новое название
              required:
                - name
    delete:
      summary: 15.5. Удалить сохраненное меню (плана питания)
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
    get:
      summary: 15.2. План питания - available 1-пользовательский 2- общий
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  name: Меню на тиждень - №1
                  available: 2
                  is_imported: false
                  date_from: '2020-06-15'
                  date_to: '2020-06-21'
                  days:
                    - day: 1
                      kpfc:
                        kkal: 2415.9
                        proteins:
                          qtt: 187.74
                          pcent: 39
                        fats:
                          qtt: 101.02
                          pcent: 21
                        carbohydrates:
                          qtt: 193.68
                          pcent: 40
                      eatings:
                        - id: 1
                          name: null
                          time: null
                          kkal: 383.989
                          contains:
                            - id: 11
                              type: product
                              name: 'Яйце, куряче, смажене'
                              image: ''
                              measure:
                                id: 21
                                name: шт (середній)
                              main_unit:
                                id: 21
                                name: середній розмір
                                short: шт (середній)
                                type: 2
                                q_min: 0.5
                                q_max: 10
                                q_step: 0.5
                                q_qtt: 1
                                koef_gramm: 0
                              measures:
                                - id: 11
                                  name: великий розмір
                                  short: шт (великий)
                                  type: 2
                                  q_min: 0.5
                                  q_max: 10
                                  q_step: 0.5
                                  q_qtt: 1
                                  koef_gramm: 46
                                - id: 21
                                  name: середній розмір
                                  short: шт (середній)
                                  type: 2
                                  q_min: 0.5
                                  q_max: 10
                                  q_step: 0.5
                                  q_qtt: 1
                                  koef_gramm: 41
                              qtt: 3
                              kkal: 196
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: Меню на тиждень - №1
                  available:
                    type: integer
                    example: 2
                  is_imported:
                    type: boolean
                    example: false
                  date_from:
                    type: string
                    example: '2020-06-15'
                  date_to:
                    type: string
                    example: '2020-06-21'
                  days:
                    type: array
                    example:
                      - day: 1
                        kpfc:
                          kkal: 2415.9
                          proteins:
                            qtt: 187.74
                            pcent: 39
                          fats:
                            qtt: 101.02
                            pcent: 21
                          carbohydrates:
                            qtt: 193.68
                            pcent: 40
                        eatings:
                          - id: 1
                            name: null
                            time: null
                            kkal: 383.989
                            contains:
                              - id: 11
                                type: product
                                name: 'Яйце, куряче, смажене'
                                image: ''
                                measure:
                                  id: 21
                                  name: шт (середній)
                                main_unit:
                                  id: 21
                                  name: середній розмір
                                  short: шт (середній)
                                  type: 2
                                  q_min: 0.5
                                  q_max: 10
                                  q_step: 0.5
                                  q_qtt: 1
                                  koef_gramm: 0
                                measures:
                                  - id: 11
                                    name: великий розмір
                                    short: шт (великий)
                                    type: 2
                                    q_min: 0.5
                                    q_max: 10
                                    q_step: 0.5
                                    q_qtt: 1
                                    koef_gramm: 46
                                  - id: 21
                                    name: середній розмір
                                    short: шт (середній)
                                    type: 2
                                    q_min: 0.5
                                    q_max: 10
                                    q_step: 0.5
                                    q_qtt: 1
                                    koef_gramm: 41
                                qtt: 3
                                kkal: 196
                    items:
                      type: object
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
  /nutrition/plans:
    get:
      summary: |-
        15.1. Экран планы питания - сохраненными меню пользователя (добавленные в избранное и импортированные по коду)
        available 1-пользовательский 2- общий
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 1
                    name: Menu for the week - №1
                    kkal: 20.03
                    date_from: '2020-06-15'
                    date_to: '2020-06-21'
                    available: 1
                    is_imported: true
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
    parameters:
      - in: path
        name: offset
        description: Optional parameter. integer Сдвиг подгрузки (сколько уже было загружено на данный момент)
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: aut
  '/nutrition/{plan}/eating':
    post:
      summary: 15.9. Добавить прием пищи в план питания
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 9
                  name: мой перекус1
                  time: '12:00:00'
                  kkal: 0
                  contains: [ ]
                properties:
                  id:
                    type: integer
                    example: 9
                  name:
                    type: string
                    example: мой перекус1
                  time:
                    type: string
                    example: '12:00:00'
                  kkal:
                    type: integer
                    example: 0
                  contains:
                    type: array
                    example: [ ]
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Название приема пищи.
                  example: Перекус
                time:
                  type: string
                  description: Время приема пищи.
                  example: '13:15:00'
                day:
                  type: integer
                  description: Номер дня недели.
                  example: 1
              required:
                - time
                - day
    patch:
      summary: 15.10. Редактировать название или время приема пищи в плане питания
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Название приема пищи.
                  example: Перекус
                time:
                  type: string
                  description: Время приема пищи.
                  example: '13:15:00'
                day:
                  type: integer
                  description: Номер дня недели.
                  example: 1
                eating_id:
                  type: integer
                  description: ИД приема пищи (подразумевается eatingcat_id).
                  example: 1
              required:
                - time
                - day
                - eating_id
    delete:
      summary: 15.11. Удалить прием пищи из плана питания
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: integer
                  description: Номер дня недели.
                  example: 1
                eating_id:
                  type: integer
                  description: ИД приема пищи (подразумевается eatingcat_id).
                  example: 1
              required:
                - day
                - eating_id
  '/nutrition/{plan}/content/put':
    post:
      summary: 15.6. Добавить продукт/блюдо в план питания
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: integer
                  description: Номер дня недели.
                  example: 1
                eating_id:
                  type: integer
                  description: ИД приема пищи (подразумевается eatingcat_id).
                  example: 1
                qtt:
                  type: numeric
                  description: Кол-во продукта/блюда.
                  example: '50'
                measure_id:
                  type: integer
                  description: Единица измерения продукта/блюда.
                  example: 1
                content_id:
                  type: integer
                  description: ИД продукта/блюда.
                  example: 26
                content_type:
                  type: string
                  description: Тип product/dish продукт или блюдо.
                  example: dish
              required:
                - day
                - eating_id
                - qtt
                - measure_id
                - content_id
                - content_type
  '/nutrition/{plan}/content/edit':
    post:
      summary: 15.7. Изменить продукт/блюдо в плане питания
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: integer
                  description: Номер дня недели.
                  example: 1
                eating_id:
                  type: integer
                  description: ИД приема пищи (подразумевается eatingcat_id).
                  example: 1
                qtt:
                  type: numeric
                  description: Кол-во продукта/блюда.
                  example: '50'
                measure_id:
                  type: integer
                  description: Единица измерения продукта/блюда.
                  example: 1
                old_measure_id:
                  type: integer
                  description: Единица измерения продукта/блюда до редактирования.
                  example: 1
                content_id:
                  type: integer
                  description: ИД продукта/блюда.
                  example: 26
                content_type:
                  type: string
                  description: Тип product/dish продукт или блюдо.
                  example: dish
              required:
                - day
                - eating_id
                - qtt
                - measure_id
                - old_measure_id
                - content_id
                - content_type
  '/nutrition/{plan}/content/pop':
    post:
      summary: 15.8. Удалить продукт/блюдо из плана питания
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Nutrition - Планы питания
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                day:
                  type: integer
                  description: Номер дня недели.
                  example: 1
                eating_id:
                  type: integer
                  description: ИД приема пищи (подразумевается eatingcat_id).
                  example: 1
                measure_id:
                  type: integer
                  description: Единица измерения продукта/блюда.
                  example: 1
                content_id:
                  type: integer
                  description: ИД продукта/блюда.
                  example: 26
                content_type:
                  type: string
                  description: Тип product/dish продукт или блюдо.
                  example: dish
              required:
                - day
                - eating_id
                - measure_id
                - content_id
                - content_type
  '/product/{productWithIsFavorite}':
    get:
      summary: 16.1. Экран продукта-состав
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 2
                  is_favorite: true
                  name: Морква
                  image: ''
                  main_unit:
                    id: 1
                    name: г
                    short: мг
                    q_min: 1
                    q_max: 500
                    q_step: 1
                    koef_gramm: 1
                  measures:
                    - id: 11
                      name: миллиграмм
                      short: мг
                      type: 1
                      q_min: 1
                      q_max: 5000
                      q_step: 1000
                      koef_gramm: 0.001
                    - id: 21
                      name: Столовая ложка
                      short: ст.л
                      type: 2
                      q_min: 0.5
                      q_max: 10
                      q_step: 0.5
                      q_qtt: 1
                      koef_gramm: 3
                  category_id: 54
                  category: Інше
                  kpfc:
                    kkal: 41
                    proteins:
                      qtt: 0.93
                      pcent: 3.01
                    fats:
                      qtt: 0.24
                      pcent: 1.54
                    carbohydrates:
                      qtt: 9.58
                      pcent: 27.45
                  materials:
                    - name: Вітаміни
                      items:
                        - id: 18
                          name: Вітамін A
                          qtt: 21.35
                          pcent: 320.25
                          measure:
                            id: 9
                            name: мкг RAE
                            short: мкг RAE
                    - name: Не указана
                      items:
                        - id: 57
                          name: Аланин
                          qtt: 0.07
                          pcent: 0
                          measure:
                            id: 1
                            name: грамм
                            short: г
                properties:
                  id:
                    type: integer
                    example: 2
                  is_favorite:
                    type: boolean
                    example: true
                  name:
                    type: string
                    example: Морква
                  image:
                    type: string
                    example: ''
                  main_unit:
                    type: object
                    example:
                      id: 1
                      name: г
                      short: мг
                      q_min: 1
                      q_max: 500
                      q_step: 1
                      koef_gramm: 1
                  measures:
                    type: array
                    example:
                      - id: 11
                        name: миллиграмм
                        short: мг
                        type: 1
                        q_min: 1
                        q_max: 5000
                        q_step: 1000
                        koef_gramm: 0.001
                      - id: 21
                        name: Столовая ложка
                        short: ст.л
                        type: 2
                        q_min: 0.5
                        q_max: 10
                        q_step: 0.5
                        q_qtt: 1
                        koef_gramm: 3
                    items:
                      type: object
                  category_id:
                    type: integer
                    example: 54
                  category:
                    type: string
                    example: Інше
                  kpfc:
                    type: object
                    example:
                      kkal: 41
                      proteins:
                        qtt: 0.93
                        pcent: 3.01
                      fats:
                        qtt: 0.24
                        pcent: 1.54
                      carbohydrates:
                        qtt: 9.58
                        pcent: 27.45
                  materials:
                    type: array
                    example:
                      - name: Вітаміни
                        items:
                          - id: 18
                            name: Вітамін A
                            qtt: 21.35
                            pcent: 320.25
                            measure:
                              id: 9
                              name: мкг RAE
                              short: мкг RAE
                      - name: Не указана
                        items:
                          - id: 57
                            name: Аланин
                            qtt: 0.07
                            pcent: 0
                            measure:
                              id: 1
                              name: грамм
                              short: г
                    items:
                      type: object
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Product - Продукты
  '/list/group/registration':
    get:
      summary: 16.2. Список групп Продуктов и Групп-Ограничений для экранов регистрациии
      description: |-
        Список Продуктов по группам для экранов регистрации, где Пользователь выбирает свои Фейворитс. Также запрос содержит список групп-ограничений, которые пользователь не употребляет
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - groups:
                      - id: 4
                        title: НАПИТКИ,
                        name: Салат з моркви з горіхами
                        products:
                          - id: 4
                            title: Сік апельсиновий, свіжовичавлений
                            image: http://prepro.cridex.net//storage/uploads/product/0/4-product20200410170526.jpg
                          - id: 55
                            title: Чай чорний
                            image: http://prepro.cridex.net//storage/uploads/product/0/55-product20200217111105.jpg
                  - restricted_products:
                      - id: 14
                        title: Бобові
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Списки
  '/product/{product}/dishes':
    get:
      summary: 16.2. Список блюд с указанным ингредиентом с подгрузкой.
      description: |-
        Блюда из общей базы или автор-пользователь,или пользователь импортировал это блюдо
        Калории блюда - на 100 грамм.
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 4
                    image: ''
                    name: Салат з моркви з горіхами
                    ingredients: 'Волоський горіх, Петрушка, зелень, Гірчиця, в зернах, подрібнена, Соняшникова олія, Морква, Сік апельсиновий, свіжовичавлений'
                    kkal: 264.69
                    is_favorite: false
                  - id: 14
                    image: ''
                    name: Борщ зі свининою
                    ingredients: 'Вода, Свинина, Масло вершкове 82,5% жирності, Картопля, Буряк, Сіль харчова, Капуста, Цибуля ріпчаста, Морква, Цукор, Сік лимонний'
                    kkal: 37.61
                    is_favorite: false
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Product - Продукты
    parameters:
      - in: path
        name: offset
        description: Optional parameter. integer Сдвиг подгрузки (сколько уже было загружено на данный момент) - для подгрузки
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: minus
      - in: path
        name: product
        description: 'Optional parameter. integer required ИД продукта, который должен содержаться в блюде'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: dicta
  /report:
    get:
      summary: 17.1. Отчет по показателям по ВЫПОЛНЕННЫМ ДЕЙСТВИЯМ за день/диапазон.
      description: |-
        Типы отчетов:
        micro - Микроэлементы (витамины,минералы) - еда и самплементация, кол-во в мг и процентное соотношение от нормы (RDA в веществе).
        plate - Диаграма Тарелка - только еда, доля группы от общего кол-ва в граммах.
        color - Диаграма Цвет - только еда, доля группы от общего кол-ва в граммах.
        fats - Диаграма Жиры - еда и самплементация, доля группы от общего кол-ва в граммах.
        omega - Омега - еда и самплементация, доля группы от общего кол-ва в граммах.

        По-умолчанию без указания дат начала и окончания возвращается информация по текущему дню.
        Если не указана дата окончания диапазона, то возвращается информация по дню, выбранному в дате начала.
      parameters:
        - in: query
          name: date_from
          description: string Дата начала диапазона.
          example: '2020-08-01'
          required: false
          schema:
            type: string
        - in: query
          name: date_to
          description: string Дата окончания диапазона.
          example: '2020-08-31'
          required: false
          schema:
            type: string
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  micro:
                    - name: Витамины
                      items:
                        - id: 18
                          group_id: 40
                          name: Витамин A
                          measure:
                            id: 9
                            name: мкг RAE
                            short: RAE
                            type: 1
                          from_eating: 74.78
                          from_supplement: 0
                          pcent_from_eating: 100
                          pcent_from_supplement: 0
                          norm:
                            measure_id: 9
                            val: 900
                          pcent_norm: 8
                    - name: Минералы
                      items: [ ]
                  fats:
                    - name: Насыщенные жиры
                      color: '#ff9130'
                      value: 0
                      pcent: 0
                  omega:
                    - name: Омега 3
                      color: '#ffe330'
                      value: 0.05
                      pcent: 2
                  plate:
                    - name: 'Овощи, зелень, грибы'
                      color: '#ffe330'
                      value: 0.05
                      pcent: 2
                  color:
                    - name: Фиолетовый / Синий
                      color: '#ffe330'
                      value: 0.05
                      pcent: 2
                properties:
                  micro:
                    type: array
                    example:
                      - name: Витамины
                        items:
                          - id: 18
                            group_id: 40
                            name: Витамин A
                            measure:
                              id: 9
                              name: мкг RAE
                              short: RAE
                              type: 1
                            from_eating: 74.78
                            from_supplement: 0
                            pcent_from_eating: 100
                            pcent_from_supplement: 0
                            norm:
                              measure_id: 9
                              val: 900
                            pcent_norm: 8
                      - name: Минералы
                        items: [ ]
                    items:
                      type: object
                  fats:
                    type: array
                    example:
                      - name: Насыщенные жиры
                        color: '#ff9130'
                        value: 0
                        pcent: 0
                    items:
                      type: object
                  omega:
                    type: array
                    example:
                      - name: Омега 3
                        color: '#ffe330'
                        value: 0.05
                        pcent: 2
                    items:
                      type: object
                  plate:
                    type: array
                    example:
                      - name: 'Овощи, зелень, грибы'
                        color: '#ffe330'
                        value: 0.05
                        pcent: 2
                    items:
                      type: object
                  color:
                    type: array
                    example:
                      - name: Фиолетовый / Синий
                        color: '#ffe330'
                        value: 0.05
                        pcent: 2
                    items:
                      type: object
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Reports - Отчеты
  '/report/plan/{id}':
    get:
      summary: 17.2. Отчет по показателям плана питания.
      description: |-
        В плане питания отчет по умолчанию формируется за 7 дней (на весь план питания).
        Если не указан номер дня окончания диапазона, то возвращается информация по дню, выбранному в дне начала.
        Параметр type может принимать значения micro, omega, fats (микроэлементы), plate, color(продукты).
        Первый объект в массиве report  - пример ответа отчета micro, второй-диаграммы.
        В отчете micro значения указаны в основных ед.измерения в-в, в диаграммах - в граммах.
      parameters:
        - in: query
          name: day_from
          description: integer День начала диапазона.
          example: '3'
          required: false
          schema:
            type: string
        - in: query
          name: day_to
          description: integer День окончания диапазона.
          example: '5'
          required: false
          schema:
            type: string
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  micro:
                    - name: Витамины
                      items:
                        - id: 18
                          group_id: 40
                          name: Витамин A
                          measure:
                            id: 9
                            name: мкг RAE
                            short: RAE
                            type: 1
                          from_eating: 74.78
                          from_supplement: 0
                          pcent_from_eating: 100
                          pcent_from_supplement: 0
                          norm:
                            measure_id: 9
                            val: 900
                          pcent_norm: 8
                    - name: Минералы
                      items: [ ]
                  fats:
                    - name: Насыщенные жиры
                      color: '#ff9130'
                      value: 0
                      pcent: 0
                  omega:
                    - name: Омега 3
                      color: '#ffe330'
                      value: 0.05
                      pcent: 2
                  plate:
                    - name: 'Овощи, зелень, грибы'
                      color: '#ffe330'
                      value: 0.05
                      pcent: 2
                  color:
                    - name: Фиолетовый / Синий
                      color: '#ffe330'
                      value: 0.05
                      pcent: 2
                properties:
                  micro:
                    type: array
                    example:
                      - name: Витамины
                        items:
                          - id: 18
                            group_id: 40
                            name: Витамин A
                            measure:
                              id: 9
                              name: мкг RAE
                              short: RAE
                              type: 1
                            from_eating: 74.78
                            from_supplement: 0
                            pcent_from_eating: 100
                            pcent_from_supplement: 0
                            norm:
                              measure_id: 9
                              val: 900
                            pcent_norm: 8
                      - name: Минералы
                        items: [ ]
                    items:
                      type: object
                  fats:
                    type: array
                    example:
                      - name: Насыщенные жиры
                        color: '#ff9130'
                        value: 0
                        pcent: 0
                    items:
                      type: object
                  omega:
                    type: array
                    example:
                      - name: Омега 3
                        color: '#ffe330'
                        value: 0.05
                        pcent: 2
                    items:
                      type: object
                  plate:
                    type: array
                    example:
                      - name: 'Овощи, зелень, грибы'
                        color: '#ffe330'
                        value: 0.05
                        pcent: 2
                    items:
                      type: object
                  color:
                    type: array
                    example:
                      - name: Фиолетовый / Синий
                        color: '#ffe330'
                        value: 0.05
                        pcent: 2
                    items:
                      type: object
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Reports - Отчеты
  /report/menu:
    get:
      summary: 17.3. Отчет по показателям меню (текущая и следущая неделя).
      description: |-
        Учитываются данные по еде, жидкости и курсам (еда + саплементация).
        Отчет по умолчанию формируется на текущий день.
        По-умолчанию без указания дат начала и окончания возвращается информация по текущему дню.
        Если не указана дата окончания диапазона, то возвращается информация по дню, выбранному в дате начала.
      parameters:
        - in: query
          name: day_from
          description: string Дата начала диапазона.
          example: '2020-08-01'
          required: false
          schema:
            type: string
        - in: query
          name: day_to
          description: string Дата окончания диапазона.
          example: '2020-08-14'
          required: false
          schema:
            type: string
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  micro:
                    - name: Витамины
                      items:
                        - id: 18
                          group_id: 40
                          name: Витамин A
                          measure:
                            id: 9
                            name: мкг RAE
                            short: RAE
                            type: 1
                          from_eating: 74.78
                          from_supplement: 0
                          pcent_from_eating: 100
                          pcent_from_supplement: 0
                          norm:
                            measure_id: 9
                            val: 900
                          pcent_norm: 8
                    - name: Минералы
                      items: [ ]
                  fats:
                    - name: Насыщенные жиры
                      color: '#ff9130'
                      value: 0
                      pcent: 0
                  omega:
                    - name: Омега 3
                      color: '#ffe330'
                      value: 0.05
                      pcent: 2
                  plate:
                    - name: 'Овощи, зелень, грибы'
                      color: '#ffe330'
                      value: 0.05
                      pcent: 2
                  color:
                    - name: Фиолетовый / Синий
                      color: '#ffe330'
                      value: 0.05
                      pcent: 2
                properties:
                  micro:
                    type: array
                    example:
                      - name: Витамины
                        items:
                          - id: 18
                            group_id: 40
                            name: Витамин A
                            measure:
                              id: 9
                              name: мкг RAE
                              short: RAE
                              type: 1
                            from_eating: 74.78
                            from_supplement: 0
                            pcent_from_eating: 100
                            pcent_from_supplement: 0
                            norm:
                              measure_id: 9
                              val: 900
                            pcent_norm: 8
                      - name: Минералы
                        items: [ ]
                    items:
                      type: object
                  fats:
                    type: array
                    example:
                      - name: Насыщенные жиры
                        color: '#ff9130'
                        value: 0
                        pcent: 0
                    items:
                      type: object
                  omega:
                    type: array
                    example:
                      - name: Омега 3
                        color: '#ffe330'
                        value: 0.05
                        pcent: 2
                    items:
                      type: object
                  plate:
                    type: array
                    example:
                      - name: 'Овощи, зелень, грибы'
                        color: '#ffe330'
                        value: 0.05
                        pcent: 2
                    items:
                      type: object
                  color:
                    type: array
                    example:
                      - name: Фиолетовый / Синий
                        color: '#ffe330'
                        value: 0.05
                        pcent: 2
                    items:
                      type: object
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Reports - Отчеты
  /schedule:
    get:
      summary: 18.1. Распорядок дня-пропущенные действия за вчера и список действий на сегодня и ближайшие 7 дней в хронологическом порядке.
      description: |-
        Типы действий в распорядке:
        eating - прием пищи (добавляет съеденные калории, меняет отчеты)
        calories - добавленные калории
        course - прием препарата курса (добавляет съеденые калории, меняет отчеты).
        activity - выполенение активности (сжигает калории).

        Для генерации расписания на 8 дней (прошедший день и 7 дней)
        собираем подходящие шаблоны курсов
        собраем подходящие шаблоны активностей
        в формирующийся объект расписания в соответствующие дни записываем в курсы и активности данные из шаблонов (если не были записаны ранее),
        получаем выборку существующих дней по этому промежутку (где уже добавлено меню, могут быть добавлены активности без шаблонов и курсы)
        в формирующийся объект расписания по каждому дню добавляем все приемы пищи, калории, активности и курсы и все это упорядочиваем по времени и по статусу выполнения


        В возвращаемом объекте в активности поле kkal-кол-во ккал, которые сжигаются этой активностью за 30 минут
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - date_timestamp_utc: 1603282628
                    schedule:
                      - id: 50201030001
                        eatingcat_id: 3
                        time: 1604048400
                        type: eating
                        name: Первый перекус
                        description: 143 ккал
                        is_done: false
                      - id: 201027001
                        time: 1603771200
                        type: calories
                        name: Калорії
                        description: 30.4 ккал
                        is_done: false
                        kkal: 30.4
                      - id: 30201030000
                        time: 1604041200
                        type: course
                        name: 'L-карнитин, 500 мг, 30 таблеток'
                        description: 2 таблетки / до еды
                        is_done: false
                        course_id: 1
                      - id: 2201027000
                        time: 1603846860
                        type: activity
                        name: Аква-біг
                        description: 45 хв. / 389 ккал
                        is_done: false
                        duration: 45
                        kkal: 259
                        period: '1,2,3,4,5,6,7'
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Schedule - Распорядок дня
  '/schedule/{date_ts_utc}/{type}/{id}':
    patch:
      summary: 18.2. Выполнить действие из распорядка дня или отменить его выполнение.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  isDone: true
                properties:
                  isDone:
                    type: boolean
                    example: true
                    description: 'Флаг состояния действия.Example:true'
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Schedule - Распорядок дня
    delete:
      summary: 18.3. Скрыть действие из распорядка дня.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - Schedule - Распорядок дня
    parameters:
      - in: path
        name: date_ts_utc
        description: Optional parameter. integer required Дата действия.
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: '1603610006'
      - in: path
        name: type
        description: Optional parameter. string required Тип действия eating|course|activity|calories.
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: eating
      - in: path
        name: id
        description: Optional parameter. integer required Идентификатор действия.
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: '1'
  /search:
    post:
      summary: '19.1. Поиск по продуктам, блюдам, веществам, комплексам.'
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                example:
                  - id: 1
                    type: product
                    name: ''
                    image: ''
                    kkal: 20.03
                  - id: 2
                    type: dish
                    name: ''
                    image: ''
                    kkal: 10
                  - id: 3
                    type: material
                    name: ''
                    image: ''
                    source: ''
                  - id: 4
                    type: complex
                    name: ''
                    image: ''
                    brand: Бренд
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Search - Поиск
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: 'min:3 Строка поиска.'
                  example: Редиска
                product:
                  type: integer
                  description: Флаг-искать в продуктах.
                  example: 1
                dish:
                  type: integer
                  description: Флаг-искать в блюдах.
                  example: 0
                material:
                  type: integer
                  description: Флаг-искать в веществах.
                  example: 0
                complex:
                  type: integer
                  description: Флаг-искать в комплексах.
                  example: 1
              required:
                - query
                - product
                - dish
                - material
                - complex
  /shoppinglist:
    get:
      summary: 20.1. Получение списка покупок
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  todo:
                    - Мёд
                    - Банан
                    - Лаваш
                  done:
                    - 'Фасоль белая, консервированная'
                    - 'Хлеб, пшеничный, цельнозерновой'
                    - 'Куриная грудка, филе, приготовленная'
                properties:
                  todo:
                    type: array
                    example:
                      - Мёд
                      - Банан
                      - Лаваш
                    items:
                      type: string
                  done:
                    type: array
                    example:
                      - 'Фасоль белая, консервированная'
                      - 'Хлеб, пшеничный, цельнозерновой'
                      - 'Куриная грудка, филе, приготовленная'
                    items:
                      type: string
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Shoppinglist - Список покупок
    post:
      summary: 20.2. Добавление в список покупок введенной строки
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Shoppinglist - Список покупок
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: string
                  description: max=50 Добавляемая строка.
                  example: персики консервированные
              required:
                - item
    delete:
      summary: 20.9. Очистить весь список
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Shoppinglist - Список покупок
  '/shoppinglist/import/{date}':
    post:
      summary: 20.3. Добавление в список покупок всех продуктов из меню
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Shoppinglist - Список покупок
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: 'Удалить и создать новый список - rewrite, дополнить текущий список - append.'
                  example: append
              required:
                - type
  /shoppinglist/check:
    patch:
      summary: 20.4. Отметить выполненым
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Shoppinglist - Список покупок
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: string
                  description: max=50 Отмечаемая строка.
                  example: персики консервированные
              required:
                - item
  /shoppinglist/uncheck:
    patch:
      summary: 20.5. Отметить невыполненым
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Shoppinglist - Список покупок
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: string
                  description: max=50 Отмечаемая строка.
                  example: персики консервированные
              required:
                - item
  /shoppinglist/edit:
    patch:
      summary: 20.6. Редактировать элемент
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Shoppinglist - Список покупок
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: string
                  description: max=50 Старое значение.
                  example: персики
                new_item:
                  type: string
                  description: max=50 Новое значение.
                  example: персики консервированные
              required:
                - item
                - new_item
  /shoppinglist/remove:
    patch:
      summary: 20.7. Удалить элемент
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Shoppinglist - Список покупок
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item:
                  type: string
                  description: max=50 Отмечаемая строка.
                  example: персики консервированные
              required:
                - item
  /shoppinglist/remove/checked:
    patch:
      summary: 20.8. Очистить список выбранных
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Shoppinglist - Список покупок
  /user/checkEmailLogin:
    post:
      summary: 21.2. Проверка допустимости email при логине
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: 'email max:255 Адрес эл.почты.'
                  example: test@test.com
              required:
                - login
      security: [ ]
  /user/checkEmail:
    post:
      summary: 21.1. Проверка допустимости email при регистрации.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'email max:255 Адрес эл.почты.'
                  example: test@test.com
              required:
                - email
      security: [ ]
  /login/apple/email:
    post:
      summary: 21.18. Запись email для apple_id
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apple_id:
                  type: string
                  description: ''
                  example: et
                email:
                  type: string
                  description: ''
                  example: aliquam
              required:
                - apple_id
                - email
      security: [ ]
    get:
      summary: 21.19. Получение email по apple_id
      description: ''
      parameters:
        - in: query
          name: apple_id
          description: string required.
          example: quo
          required: false
          schema:
            type: string
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  email: some-email@mail.com
                properties:
                  email:
                    type: string
                    example: some-email@mail.com
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - User - Пользователи
      security: [ ]
  /user:
    post:
      summary: 21.3.  Анкета - Регистрация по email.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 10
                  email: test1@test.ru
                  name: name
                  last_name: Surname
                  gender: 2
                  height: 87
                  weight: 90
                  age: 30
                  target: 1
                  activity: 1
                  is_pregnant: true
                  is_lactation: false
                  kkal: 500
                  proteins: 10
                  fats: 60
                  carbohydrates: 30
                  water: 2.3
                  facebook_id: facebookid
                  google_id: googleid
                  apple_login: false
                  image: ''
                  token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZjc2MzNhYmY0YTllZDNlMDExYjdhZWFiODVlNGNlODExMzVhMTViNTFkNzU2MWIxMjVjOTI0OGE4NTg5YzIwMjM4NjYyZDkzNTgxY2I5NzMiLCJpYXQiOjE1ODIyMjY3MjIsIm5iZiI6MTU4MjIyNjcyMiwiZXhwIjoxNTk3OTUxNTIxLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.C80Q7ovgfjRFs2d9L7g_Mj0eitbCva1Hf3GuyhQCR0uiZxj7kOqjCRXpJiSjDTyyjQPHHx8uIIkKvTZdk9WLk1sb8tAwewaED4GUiolfPv3p4kj8g88iYU_4uOATZqTSFVjrvtdO-c6EutbOtQSoRV0aMRLPDtHh4vimtjRmmOlTv94PmQllcH3sFpINhDrs9RHtJzELsdxdwhkSSI-TWXxHc54aDmig-gpt8TX8yGJRcEXk0F3D41SkkJfrQ_tWUZ7EkQcH5aA23ZkEKtYXofIq55UnHWPTHqKpr7Ys1t82mk7iazo76ATah2zx9E_zU9lkkqgR74EZ8T9J6Gn4WiUj_chroYgWqIHZTnq9uw0mfuF76Gzsp0dz0tQ7e3V-WA19gQ5YYxk1fc7o2TG-YXcAJDMsDK5zTEFubWY1NDQe-15UD7VMCo8tlI-wCXjD8x6iLhuHB0R1bjn0iM4fYua1co9f1yTCSg3VGhMdKrALgNnKKu1mDHT6J1z9otQptmnd-MlaoJZsXfET8Y-FfgCBi4vpcUkIAedieuhwT_w8Ts3ghDl5gfU6ivnPX_-3g7Lw96jwLpXA7JWGwVBAahh77vpMSosXhnZvK7Y_KI1su6uR-KQlCnXatKTdSo8KP_BUUWEZemYd-8HmaHfA9CghoCrvj8HrG63ExlN9Xi4
                properties:
                  id:
                    type: integer
                    example: 10
                  email:
                    type: string
                    example: test1@test.ru
                  name:
                    type: string
                    example: name
                  last_name:
                    type: string
                    example: Surname
                  gender:
                    type: integer
                    example: 2
                  height:
                    type: integer
                    example: 87
                  weight:
                    type: integer
                    example: 90
                  age:
                    type: integer
                    example: 30
                  target:
                    type: integer
                    example: 1
                  activity:
                    type: integer
                    example: 1
                  is_pregnant:
                    type: boolean
                    example: true
                  is_lactation:
                    type: boolean
                    example: false
                  kkal:
                    type: integer
                    example: 500
                  proteins:
                    type: integer
                    example: 10
                  fats:
                    type: integer
                    example: 60
                  carbohydrates:
                    type: integer
                    example: 30
                  water:
                    type: number
                    example: 2.3
                  facebook_id:
                    type: string
                    example: facebookid
                  google_id:
                    type: string
                    example: googleid
                  apple_login:
                    type: boolean
                    example: false
                  image:
                    type: string
                    example: ''
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZjc2MzNhYmY0YTllZDNlMDExYjdhZWFiODVlNGNlODExMzVhMTViNTFkNzU2MWIxMjVjOTI0OGE4NTg5YzIwMjM4NjYyZDkzNTgxY2I5NzMiLCJpYXQiOjE1ODIyMjY3MjIsIm5iZiI6MTU4MjIyNjcyMiwiZXhwIjoxNTk3OTUxNTIxLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.C80Q7ovgfjRFs2d9L7g_Mj0eitbCva1Hf3GuyhQCR0uiZxj7kOqjCRXpJiSjDTyyjQPHHx8uIIkKvTZdk9WLk1sb8tAwewaED4GUiolfPv3p4kj8g88iYU_4uOATZqTSFVjrvtdO-c6EutbOtQSoRV0aMRLPDtHh4vimtjRmmOlTv94PmQllcH3sFpINhDrs9RHtJzELsdxdwhkSSI-TWXxHc54aDmig-gpt8TX8yGJRcEXk0F3D41SkkJfrQ_tWUZ7EkQcH5aA23ZkEKtYXofIq55UnHWPTHqKpr7Ys1t82mk7iazo76ATah2zx9E_zU9lkkqgR74EZ8T9J6Gn4WiUj_chroYgWqIHZTnq9uw0mfuF76Gzsp0dz0tQ7e3V-WA19gQ5YYxk1fc7o2TG-YXcAJDMsDK5zTEFubWY1NDQe-15UD7VMCo8tlI-wCXjD8x6iLhuHB0R1bjn0iM4fYua1co9f1yTCSg3VGhMdKrALgNnKKu1mDHT6J1z9otQptmnd-MlaoJZsXfET8Y-FfgCBi4vpcUkIAedieuhwT_w8Ts3ghDl5gfU6ivnPX_-3g7Lw96jwLpXA7JWGwVBAahh77vpMSosXhnZvK7Y_KI1su6uR-KQlCnXatKTdSo8KP_BUUWEZemYd-8HmaHfA9CghoCrvj8HrG63ExlN9Xi4
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'without google_id, facebook_id, apple_id unique email max:255 Адрес эл.почты.'
                  example: test@test.com
                password:
                  type: string
                  description: 'min:6 max:255 Пароль.'
                  example: '123456'
                name:
                  type: string
                  description: 'max:255 Имя.'
                  example: Name
                gender:
                  type: integer
                  description: 'Пол (1 - мужской, 2 - женский).'
                  example: 2
                height:
                  type: integer
                  description: 'min:50 max:300 Рост.'
                  example: 164
                weight:
                  type: number
                  description: 'min:25 max:635 Вес.'
                  example: 51
                age:
                  type: integer
                  description: 'min:1 max:150 Возраст.'
                  example: 30
                target:
                  type: integer
                  description: '[1,2,3,4,5] Цель по весу (1 - Интенсивно худеем,2 - Умеренно худеем, 3 - Поддерживаем вес, 4 - Умеренно набираем, 5 - Интенсивно набираем).'
                  example: 3
                activity:
                  type: integer
                  description: '[1,2,3,4] Уровень активности (1 - Минимальная,2 - Легкая, 3 - Средняя, 4 - Высокая).'
                  example: 3
                is_pregnant:
                  type: boolean
                  description: Беременность - для женского пола.
                  example: false
                is_lactation:
                  type: boolean
                  description: 'Лактация - для женского пола. Одновременно можно указать или беременность, или лактацию, оба параметра - нельзя.'
                  example: false
                kkal:
                  type: integer
                  description: 'min:500 max:5000 Калории.'
                  example: 2500
                proteins:
                  type: integer
                  description: 'min:0 max:100 Белки.'
                  example: 35
                fats:
                  type: integer
                  description: 'min:0 max:100 Жиры.'
                  example: 35
                carbohydrates:
                  type: integer
                  description: 'min:0 max:100 Углеводы. Сумма БЖУ должна быть 100.'
                  example: 30
                water:
                  type: decimal
                  description: '1,1 required min:1 max:5 Калории.'
                  example: '2.5'
                facebook_id:
                  type: string
                  description: 'without pasword, google_id, apple_id. ИД пользователя facebook.'
                  example: facebookid
                google_id:
                  type: string
                  description: 'without password,facebook_id, apple_id. ИД пользователя google.'
                  example: googleid
                apple_id:
                  type: string
                  description: 'without password, facebook_id, google_id. Apple ID.'
                  example: quia
                image:
                  type: string
                  description: 'max:255 Урл картинки из соц чети.'
                  example: 'https://graph.facebook.com/v3.3/112089077159855944/picture?width=1920'
              required:
                - email
                - password
                - name
                - gender
                - height
                - weight
                - age
                - target
                - activity
                - kkal
                - proteins
                - fats
                - carbohydrates
                - facebook_id
                - google_id
                - apple_id
      security: [ ]
    get:
      summary: 21.9. Профиль пользователя.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 10
                  email: test1@test.ru
                  name: name
                  last_name: Surname
                  gender: 2
                  height: 87
                  weight: 90
                  age: 30
                  target: 1
                  activity: 1
                  is_pregnant: true
                  is_lactation: false
                  kkal: 500
                  proteins: 10
                  fats: 60
                  carbohydrates: 30
                  water: 2.3
                  facebook_id: facebookid
                  google_id: googleid
                  apple_login: false
                  image: ''
                properties:
                  id:
                    type: integer
                    example: 10
                  email:
                    type: string
                    example: test1@test.ru
                  name:
                    type: string
                    example: name
                  last_name:
                    type: string
                    example: Surname
                  gender:
                    type: integer
                    example: 2
                  height:
                    type: integer
                    example: 87
                  weight:
                    type: integer
                    example: 90
                  age:
                    type: integer
                    example: 30
                  target:
                    type: integer
                    example: 1
                  activity:
                    type: integer
                    example: 1
                  is_pregnant:
                    type: boolean
                    example: true
                  is_lactation:
                    type: boolean
                    example: false
                  kkal:
                    type: integer
                    example: 500
                  proteins:
                    type: integer
                    example: 10
                  fats:
                    type: integer
                    example: 60
                  carbohydrates:
                    type: integer
                    example: 30
                  water:
                    type: number
                    example: 2.3
                  facebook_id:
                    type: string
                    example: facebookid
                  google_id:
                    type: string
                    example: googleid
                  apple_login:
                    type: boolean
                    example: false
                  image:
                    type: string
                    example: ''
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - User - Пользователи
  /login:
    post:
      summary: 21.11. Вход по email-пароль
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 10
                  email: test1@test.ru
                  name: name
                  last_name: Surname
                  gender: 2
                  height: 87
                  weight: 90
                  age: 30
                  target: 1
                  activity: 1
                  kkal: 500
                  proteins: 10
                  fats: 60
                  carbohydrates: 30
                  water: 2.3
                  is_pregnant: true
                  is_lactation: false
                  facebook_id: facebookid
                  google_id: googleid
                  image: ''
                  token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZjc2MzNhYmY0YTllZDNlMDExYjdhZWFiODVlNGNlODExMzVhMTViNTFkNzU2MWIxMjVjOTI0OGE4NTg5YzIwMjM4NjYyZDkzNTgxY2I5NzMiLCJpYXQiOjE1ODIyMjY3MjIsIm5iZiI6MTU4MjIyNjcyMiwiZXhwIjoxNTk3OTUxNTIxLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.C80Q7ovgfjRFs2d9L7g_Mj0eitbCva1Hf3GuyhQCR0uiZxj7kOqjCRXpJiSjDTyyjQPHHx8uIIkKvTZdk9WLk1sb8tAwewaED4GUiolfPv3p4kj8g88iYU_4uOATZqTSFVjrvtdO-c6EutbOtQSoRV0aMRLPDtHh4vimtjRmmOlTv94PmQllcH3sFpINhDrs9RHtJzELsdxdwhkSSI-TWXxHc54aDmig-gpt8TX8yGJRcEXk0F3D41SkkJfrQ_tWUZ7EkQcH5aA23ZkEKtYXofIq55UnHWPTHqKpr7Ys1t82mk7iazo76ATah2zx9E_zU9lkkqgR74EZ8T9J6Gn4WiUj_chroYgWqIHZTnq9uw0mfuF76Gzsp0dz0tQ7e3V-WA19gQ5YYxk1fc7o2TG-YXcAJDMsDK5zTEFubWY1NDQe-15UD7VMCo8tlI-wCXjD8x6iLhuHB0R1bjn0iM4fYua1co9f1yTCSg3VGhMdKrALgNnKKu1mDHT6J1z9otQptmnd-MlaoJZsXfET8Y-FfgCBi4vpcUkIAedieuhwT_w8Ts3ghDl5gfU6ivnPX_-3g7Lw96jwLpXA7JWGwVBAahh77vpMSosXhnZvK7Y_KI1su6uR-KQlCnXatKTdSo8KP_BUUWEZemYd-8HmaHfA9CghoCrvj8HrG63ExlN9Xi4
                properties:
                  id:
                    type: integer
                    example: 10
                  email:
                    type: string
                    example: test1@test.ru
                  name:
                    type: string
                    example: name
                  last_name:
                    type: string
                    example: Surname
                  gender:
                    type: integer
                    example: 2
                  height:
                    type: integer
                    example: 87
                  weight:
                    type: integer
                    example: 90
                  age:
                    type: integer
                    example: 30
                  target:
                    type: integer
                    example: 1
                  activity:
                    type: integer
                    example: 1
                  kkal:
                    type: integer
                    example: 500
                  proteins:
                    type: integer
                    example: 10
                  fats:
                    type: integer
                    example: 60
                  carbohydrates:
                    type: integer
                    example: 30
                  water:
                    type: number
                    example: 2.3
                  is_pregnant:
                    type: boolean
                    example: true
                  is_lactation:
                    type: boolean
                    example: false
                  facebook_id:
                    type: string
                    example: facebookid
                  google_id:
                    type: string
                    example: googleid
                  image:
                    type: string
                    example: ''
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZjc2MzNhYmY0YTllZDNlMDExYjdhZWFiODVlNGNlODExMzVhMTViNTFkNzU2MWIxMjVjOTI0OGE4NTg5YzIwMjM4NjYyZDkzNTgxY2I5NzMiLCJpYXQiOjE1ODIyMjY3MjIsIm5iZiI6MTU4MjIyNjcyMiwiZXhwIjoxNTk3OTUxNTIxLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.C80Q7ovgfjRFs2d9L7g_Mj0eitbCva1Hf3GuyhQCR0uiZxj7kOqjCRXpJiSjDTyyjQPHHx8uIIkKvTZdk9WLk1sb8tAwewaED4GUiolfPv3p4kj8g88iYU_4uOATZqTSFVjrvtdO-c6EutbOtQSoRV0aMRLPDtHh4vimtjRmmOlTv94PmQllcH3sFpINhDrs9RHtJzELsdxdwhkSSI-TWXxHc54aDmig-gpt8TX8yGJRcEXk0F3D41SkkJfrQ_tWUZ7EkQcH5aA23ZkEKtYXofIq55UnHWPTHqKpr7Ys1t82mk7iazo76ATah2zx9E_zU9lkkqgR74EZ8T9J6Gn4WiUj_chroYgWqIHZTnq9uw0mfuF76Gzsp0dz0tQ7e3V-WA19gQ5YYxk1fc7o2TG-YXcAJDMsDK5zTEFubWY1NDQe-15UD7VMCo8tlI-wCXjD8x6iLhuHB0R1bjn0iM4fYua1co9f1yTCSg3VGhMdKrALgNnKKu1mDHT6J1z9otQptmnd-MlaoJZsXfET8Y-FfgCBi4vpcUkIAedieuhwT_w8Ts3ghDl5gfU6ivnPX_-3g7Lw96jwLpXA7JWGwVBAahh77vpMSosXhnZvK7Y_KI1su6uR-KQlCnXatKTdSo8KP_BUUWEZemYd-8HmaHfA9CghoCrvj8HrG63ExlN9Xi4
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORISED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORISED
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: email.
                  example: test@test.com
                password:
                  type: string
                  description: пароль.
                  example: '123456'
              required:
                - login
                - password
      security: [ ]
  /login/facebook:
    post:
      summary: 21.12. Вход через Facebook
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 10
                  email: test1@test.ru
                  name: name
                  last_name: Surname
                  gender: 2
                  height: 87
                  weight: 90
                  age: 30
                  target: 1
                  activity: 1
                  kkal: 500
                  proteins: 10
                  fats: 60
                  carbohydrates: 30
                  water: 2.3
                  is_pregnant: true
                  is_lactation: false
                  facebook_id: facebookid
                  google_id: googleid
                  image: ''
                  token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZjc2MzNhYmY0YTllZDNlMDExYjdhZWFiODVlNGNlODExMzVhMTViNTFkNzU2MWIxMjVjOTI0OGE4NTg5YzIwMjM4NjYyZDkzNTgxY2I5NzMiLCJpYXQiOjE1ODIyMjY3MjIsIm5iZiI6MTU4MjIyNjcyMiwiZXhwIjoxNTk3OTUxNTIxLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.C80Q7ovgfjRFs2d9L7g_Mj0eitbCva1Hf3GuyhQCR0uiZxj7kOqjCRXpJiSjDTyyjQPHHx8uIIkKvTZdk9WLk1sb8tAwewaED4GUiolfPv3p4kj8g88iYU_4uOATZqTSFVjrvtdO-c6EutbOtQSoRV0aMRLPDtHh4vimtjRmmOlTv94PmQllcH3sFpINhDrs9RHtJzELsdxdwhkSSI-TWXxHc54aDmig-gpt8TX8yGJRcEXk0F3D41SkkJfrQ_tWUZ7EkQcH5aA23ZkEKtYXofIq55UnHWPTHqKpr7Ys1t82mk7iazo76ATah2zx9E_zU9lkkqgR74EZ8T9J6Gn4WiUj_chroYgWqIHZTnq9uw0mfuF76Gzsp0dz0tQ7e3V-WA19gQ5YYxk1fc7o2TG-YXcAJDMsDK5zTEFubWY1NDQe-15UD7VMCo8tlI-wCXjD8x6iLhuHB0R1bjn0iM4fYua1co9f1yTCSg3VGhMdKrALgNnKKu1mDHT6J1z9otQptmnd-MlaoJZsXfET8Y-FfgCBi4vpcUkIAedieuhwT_w8Ts3ghDl5gfU6ivnPX_-3g7Lw96jwLpXA7JWGwVBAahh77vpMSosXhnZvK7Y_KI1su6uR-KQlCnXatKTdSo8KP_BUUWEZemYd-8HmaHfA9CghoCrvj8HrG63ExlN9Xi4
                properties:
                  id:
                    type: integer
                    example: 10
                  email:
                    type: string
                    example: test1@test.ru
                  name:
                    type: string
                    example: name
                  last_name:
                    type: string
                    example: Surname
                  gender:
                    type: integer
                    example: 2
                  height:
                    type: integer
                    example: 87
                  weight:
                    type: integer
                    example: 90
                  age:
                    type: integer
                    example: 30
                  target:
                    type: integer
                    example: 1
                  activity:
                    type: integer
                    example: 1
                  kkal:
                    type: integer
                    example: 500
                  proteins:
                    type: integer
                    example: 10
                  fats:
                    type: integer
                    example: 60
                  carbohydrates:
                    type: integer
                    example: 30
                  water:
                    type: number
                    example: 2.3
                  is_pregnant:
                    type: boolean
                    example: true
                  is_lactation:
                    type: boolean
                    example: false
                  facebook_id:
                    type: string
                    example: facebookid
                  google_id:
                    type: string
                    example: googleid
                  image:
                    type: string
                    example: ''
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZjc2MzNhYmY0YTllZDNlMDExYjdhZWFiODVlNGNlODExMzVhMTViNTFkNzU2MWIxMjVjOTI0OGE4NTg5YzIwMjM4NjYyZDkzNTgxY2I5NzMiLCJpYXQiOjE1ODIyMjY3MjIsIm5iZiI6MTU4MjIyNjcyMiwiZXhwIjoxNTk3OTUxNTIxLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.C80Q7ovgfjRFs2d9L7g_Mj0eitbCva1Hf3GuyhQCR0uiZxj7kOqjCRXpJiSjDTyyjQPHHx8uIIkKvTZdk9WLk1sb8tAwewaED4GUiolfPv3p4kj8g88iYU_4uOATZqTSFVjrvtdO-c6EutbOtQSoRV0aMRLPDtHh4vimtjRmmOlTv94PmQllcH3sFpINhDrs9RHtJzELsdxdwhkSSI-TWXxHc54aDmig-gpt8TX8yGJRcEXk0F3D41SkkJfrQ_tWUZ7EkQcH5aA23ZkEKtYXofIq55UnHWPTHqKpr7Ys1t82mk7iazo76ATah2zx9E_zU9lkkqgR74EZ8T9J6Gn4WiUj_chroYgWqIHZTnq9uw0mfuF76Gzsp0dz0tQ7e3V-WA19gQ5YYxk1fc7o2TG-YXcAJDMsDK5zTEFubWY1NDQe-15UD7VMCo8tlI-wCXjD8x6iLhuHB0R1bjn0iM4fYua1co9f1yTCSg3VGhMdKrALgNnKKu1mDHT6J1z9otQptmnd-MlaoJZsXfET8Y-FfgCBi4vpcUkIAedieuhwT_w8Ts3ghDl5gfU6ivnPX_-3g7Lw96jwLpXA7JWGwVBAahh77vpMSosXhnZvK7Y_KI1su6uR-KQlCnXatKTdSo8KP_BUUWEZemYd-8HmaHfA9CghoCrvj8HrG63ExlN9Xi4
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORISED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORISED
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: access_token пользователя facebook
                  example: qui
                facebook_id:
                  type: string
                  description: ID пользователя facebook
                  example: voluptate
              required:
                - token
                - facebook_id
      security: [ ]
  /login/google:
    post:
      summary: 21.13. Вход через Google
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 10
                  email: test1@test.ru
                  name: name
                  last_name: Surname
                  gender: 2
                  height: 87
                  weight: 90
                  age: 30
                  target: 1
                  activity: 1
                  kkal: 500
                  proteins: 10
                  fats: 60
                  carbohydrates: 30
                  water: 2.3
                  is_pregnant: true
                  is_lactation: false
                  facebook_id: facebookid
                  google_id: googleid
                  image: ''
                  token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZjc2MzNhYmY0YTllZDNlMDExYjdhZWFiODVlNGNlODExMzVhMTViNTFkNzU2MWIxMjVjOTI0OGE4NTg5YzIwMjM4NjYyZDkzNTgxY2I5NzMiLCJpYXQiOjE1ODIyMjY3MjIsIm5iZiI6MTU4MjIyNjcyMiwiZXhwIjoxNTk3OTUxNTIxLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.C80Q7ovgfjRFs2d9L7g_Mj0eitbCva1Hf3GuyhQCR0uiZxj7kOqjCRXpJiSjDTyyjQPHHx8uIIkKvTZdk9WLk1sb8tAwewaED4GUiolfPv3p4kj8g88iYU_4uOATZqTSFVjrvtdO-c6EutbOtQSoRV0aMRLPDtHh4vimtjRmmOlTv94PmQllcH3sFpINhDrs9RHtJzELsdxdwhkSSI-TWXxHc54aDmig-gpt8TX8yGJRcEXk0F3D41SkkJfrQ_tWUZ7EkQcH5aA23ZkEKtYXofIq55UnHWPTHqKpr7Ys1t82mk7iazo76ATah2zx9E_zU9lkkqgR74EZ8T9J6Gn4WiUj_chroYgWqIHZTnq9uw0mfuF76Gzsp0dz0tQ7e3V-WA19gQ5YYxk1fc7o2TG-YXcAJDMsDK5zTEFubWY1NDQe-15UD7VMCo8tlI-wCXjD8x6iLhuHB0R1bjn0iM4fYua1co9f1yTCSg3VGhMdKrALgNnKKu1mDHT6J1z9otQptmnd-MlaoJZsXfET8Y-FfgCBi4vpcUkIAedieuhwT_w8Ts3ghDl5gfU6ivnPX_-3g7Lw96jwLpXA7JWGwVBAahh77vpMSosXhnZvK7Y_KI1su6uR-KQlCnXatKTdSo8KP_BUUWEZemYd-8HmaHfA9CghoCrvj8HrG63ExlN9Xi4
                properties:
                  id:
                    type: integer
                    example: 10
                  email:
                    type: string
                    example: test1@test.ru
                  name:
                    type: string
                    example: name
                  last_name:
                    type: string
                    example: Surname
                  gender:
                    type: integer
                    example: 2
                  height:
                    type: integer
                    example: 87
                  weight:
                    type: integer
                    example: 90
                  age:
                    type: integer
                    example: 30
                  target:
                    type: integer
                    example: 1
                  activity:
                    type: integer
                    example: 1
                  kkal:
                    type: integer
                    example: 500
                  proteins:
                    type: integer
                    example: 10
                  fats:
                    type: integer
                    example: 60
                  carbohydrates:
                    type: integer
                    example: 30
                  water:
                    type: number
                    example: 2.3
                  is_pregnant:
                    type: boolean
                    example: true
                  is_lactation:
                    type: boolean
                    example: false
                  facebook_id:
                    type: string
                    example: facebookid
                  google_id:
                    type: string
                    example: googleid
                  image:
                    type: string
                    example: ''
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZjc2MzNhYmY0YTllZDNlMDExYjdhZWFiODVlNGNlODExMzVhMTViNTFkNzU2MWIxMjVjOTI0OGE4NTg5YzIwMjM4NjYyZDkzNTgxY2I5NzMiLCJpYXQiOjE1ODIyMjY3MjIsIm5iZiI6MTU4MjIyNjcyMiwiZXhwIjoxNTk3OTUxNTIxLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.C80Q7ovgfjRFs2d9L7g_Mj0eitbCva1Hf3GuyhQCR0uiZxj7kOqjCRXpJiSjDTyyjQPHHx8uIIkKvTZdk9WLk1sb8tAwewaED4GUiolfPv3p4kj8g88iYU_4uOATZqTSFVjrvtdO-c6EutbOtQSoRV0aMRLPDtHh4vimtjRmmOlTv94PmQllcH3sFpINhDrs9RHtJzELsdxdwhkSSI-TWXxHc54aDmig-gpt8TX8yGJRcEXk0F3D41SkkJfrQ_tWUZ7EkQcH5aA23ZkEKtYXofIq55UnHWPTHqKpr7Ys1t82mk7iazo76ATah2zx9E_zU9lkkqgR74EZ8T9J6Gn4WiUj_chroYgWqIHZTnq9uw0mfuF76Gzsp0dz0tQ7e3V-WA19gQ5YYxk1fc7o2TG-YXcAJDMsDK5zTEFubWY1NDQe-15UD7VMCo8tlI-wCXjD8x6iLhuHB0R1bjn0iM4fYua1co9f1yTCSg3VGhMdKrALgNnKKu1mDHT6J1z9otQptmnd-MlaoJZsXfET8Y-FfgCBi4vpcUkIAedieuhwT_w8Ts3ghDl5gfU6ivnPX_-3g7Lw96jwLpXA7JWGwVBAahh77vpMSosXhnZvK7Y_KI1su6uR-KQlCnXatKTdSo8KP_BUUWEZemYd-8HmaHfA9CghoCrvj8HrG63ExlN9Xi4
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORISED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORISED
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: access_token пользователя google
                  example: dolorem
                google_id:
                  type: string
                  description: ID пользователя facebook
                  example: est
                client:
                  type: integer
                  description: 'Флаг клиента 1-ios, 2-android'
                  example: 1
              required:
                - token
                - google_id
                - client
      security: [ ]
  /login/apple:
    post:
      summary: 21.15. Вход через Apple
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 10
                  email: test1@test.ru
                  name: name
                  last_name: Surname
                  gender: 2
                  height: 87
                  weight: 90
                  age: 30
                  target: 1
                  activity: 1
                  kkal: 500
                  proteins: 10
                  fats: 60
                  carbohydrates: 30
                  water: 2.3
                  is_pregnant: true
                  is_lactation: false
                  facebook_id: facebookid
                  google_id: googleid
                  image: ''
                  token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZjc2MzNhYmY0YTllZDNlMDExYjdhZWFiODVlNGNlODExMzVhMTViNTFkNzU2MWIxMjVjOTI0OGE4NTg5YzIwMjM4NjYyZDkzNTgxY2I5NzMiLCJpYXQiOjE1ODIyMjY3MjIsIm5iZiI6MTU4MjIyNjcyMiwiZXhwIjoxNTk3OTUxNTIxLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.C80Q7ovgfjRFs2d9L7g_Mj0eitbCva1Hf3GuyhQCR0uiZxj7kOqjCRXpJiSjDTyyjQPHHx8uIIkKvTZdk9WLk1sb8tAwewaED4GUiolfPv3p4kj8g88iYU_4uOATZqTSFVjrvtdO-c6EutbOtQSoRV0aMRLPDtHh4vimtjRmmOlTv94PmQllcH3sFpINhDrs9RHtJzELsdxdwhkSSI-TWXxHc54aDmig-gpt8TX8yGJRcEXk0F3D41SkkJfrQ_tWUZ7EkQcH5aA23ZkEKtYXofIq55UnHWPTHqKpr7Ys1t82mk7iazo76ATah2zx9E_zU9lkkqgR74EZ8T9J6Gn4WiUj_chroYgWqIHZTnq9uw0mfuF76Gzsp0dz0tQ7e3V-WA19gQ5YYxk1fc7o2TG-YXcAJDMsDK5zTEFubWY1NDQe-15UD7VMCo8tlI-wCXjD8x6iLhuHB0R1bjn0iM4fYua1co9f1yTCSg3VGhMdKrALgNnKKu1mDHT6J1z9otQptmnd-MlaoJZsXfET8Y-FfgCBi4vpcUkIAedieuhwT_w8Ts3ghDl5gfU6ivnPX_-3g7Lw96jwLpXA7JWGwVBAahh77vpMSosXhnZvK7Y_KI1su6uR-KQlCnXatKTdSo8KP_BUUWEZemYd-8HmaHfA9CghoCrvj8HrG63ExlN9Xi4
                properties:
                  id:
                    type: integer
                    example: 10
                  email:
                    type: string
                    example: test1@test.ru
                  name:
                    type: string
                    example: name
                  last_name:
                    type: string
                    example: Surname
                  gender:
                    type: integer
                    example: 2
                  height:
                    type: integer
                    example: 87
                  weight:
                    type: integer
                    example: 90
                  age:
                    type: integer
                    example: 30
                  target:
                    type: integer
                    example: 1
                  activity:
                    type: integer
                    example: 1
                  kkal:
                    type: integer
                    example: 500
                  proteins:
                    type: integer
                    example: 10
                  fats:
                    type: integer
                    example: 60
                  carbohydrates:
                    type: integer
                    example: 30
                  water:
                    type: number
                    example: 2.3
                  is_pregnant:
                    type: boolean
                    example: true
                  is_lactation:
                    type: boolean
                    example: false
                  facebook_id:
                    type: string
                    example: facebookid
                  google_id:
                    type: string
                    example: googleid
                  image:
                    type: string
                    example: ''
                  token:
                    type: string
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJhdWQiOiIxIiwianRpIjoiZjc2MzNhYmY0YTllZDNlMDExYjdhZWFiODVlNGNlODExMzVhMTViNTFkNzU2MWIxMjVjOTI0OGE4NTg5YzIwMjM4NjYyZDkzNTgxY2I5NzMiLCJpYXQiOjE1ODIyMjY3MjIsIm5iZiI6MTU4MjIyNjcyMiwiZXhwIjoxNTk3OTUxNTIxLCJzdWIiOiIxMCIsInNjb3BlcyI6W119.C80Q7ovgfjRFs2d9L7g_Mj0eitbCva1Hf3GuyhQCR0uiZxj7kOqjCRXpJiSjDTyyjQPHHx8uIIkKvTZdk9WLk1sb8tAwewaED4GUiolfPv3p4kj8g88iYU_4uOATZqTSFVjrvtdO-c6EutbOtQSoRV0aMRLPDtHh4vimtjRmmOlTv94PmQllcH3sFpINhDrs9RHtJzELsdxdwhkSSI-TWXxHc54aDmig-gpt8TX8yGJRcEXk0F3D41SkkJfrQ_tWUZ7EkQcH5aA23ZkEKtYXofIq55UnHWPTHqKpr7Ys1t82mk7iazo76ATah2zx9E_zU9lkkqgR74EZ8T9J6Gn4WiUj_chroYgWqIHZTnq9uw0mfuF76Gzsp0dz0tQ7e3V-WA19gQ5YYxk1fc7o2TG-YXcAJDMsDK5zTEFubWY1NDQe-15UD7VMCo8tlI-wCXjD8x6iLhuHB0R1bjn0iM4fYua1co9f1yTCSg3VGhMdKrALgNnKKu1mDHT6J1z9otQptmnd-MlaoJZsXfET8Y-FfgCBi4vpcUkIAedieuhwT_w8Ts3ghDl5gfU6ivnPX_-3g7Lw96jwLpXA7JWGwVBAahh77vpMSosXhnZvK7Y_KI1su6uR-KQlCnXatKTdSo8KP_BUUWEZemYd-8HmaHfA9CghoCrvj8HrG63ExlN9Xi4
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORISED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORISED
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apple_id:
                  type: string
                  description: ''
                  example: fugit
              required:
                - apple_id
      security: [ ]
  /logout:
    post:
      summary: 21.14. Выход
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 200
                  message: SUCCESS
                properties:
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: SUCCESS
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
      tags:
        - User - Пользователи
  /user/getResetCode:
    post:
      summary: 21.4. Получение кода для активации сброса пароля.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'email max:255 Адрес эл.почты.'
                  example: test@test.com
              required:
                - email
      security: [ ]
  /user/resetPassword:
    post:
      summary: 21.5. Отправка кода для активации сброса пароля.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'email max:255 Адрес эл.почты.'
                  example: test@test.com
                code:
                  type: string
                  description: 'length:6 Код в формате ХХХХXX.'
                  example: '123456'
              required:
                - email
                - code
      security: [ ]
  /user/updatePassword:
    post:
      summary: 21.6. Обновление пароля.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                properties:
                  success:
                    type: boolean
                    example: true
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'email max:255 Адрес эл.почты.'
                  example: test@test.com
                code:
                  type: string
                  description: 'length:6 Код в формате ХХХХXX.'
                  example: '123456'
                password:
                  type: string
                  description: 'min:6 Новый пароль.'
                  example: '123456'
                password_confirmation:
                  type: string
                  description: 'min:6 required Подтверждение (повторить пароль).'
                  example: '123456'
              required:
                - email
                - code
                - password
      security: [ ]
  /user/update:
    post:
      summary: 21.7. Редактирование параметров пользователя.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: multipart/form-data
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 10
                  email: test1@test.ru
                  name: name
                  last_name: Surname
                  gender: 2
                  height: 87
                  weight: 90
                  age: 30
                  target: 1
                  activity: 1
                  is_pregnant: true
                  is_lactation: false
                  kkal: 500
                  proteins: 10
                  fats: 60
                  carbohydrates: 30
                  water: 2.3
                  facebook_id: facebookid
                  google_id: googleid
                  apple_login: false
                  image: ''
                properties:
                  id:
                    type: integer
                    example: 10
                  email:
                    type: string
                    example: test1@test.ru
                  name:
                    type: string
                    example: name
                  last_name:
                    type: string
                    example: Surname
                  gender:
                    type: integer
                    example: 2
                  height:
                    type: integer
                    example: 87
                  weight:
                    type: integer
                    example: 90
                  age:
                    type: integer
                    example: 30
                  target:
                    type: integer
                    example: 1
                  activity:
                    type: integer
                    example: 1
                  is_pregnant:
                    type: boolean
                    example: true
                  is_lactation:
                    type: boolean
                    example: false
                  kkal:
                    type: integer
                    example: 500
                  proteins:
                    type: integer
                    example: 10
                  fats:
                    type: integer
                    example: 60
                  carbohydrates:
                    type: integer
                    example: 30
                  water:
                    type: number
                    example: 2.3
                  facebook_id:
                    type: string
                    example: facebookid
                  google_id:
                    type: string
                    example: googleid
                  apple_login:
                    type: boolean
                    example: false
                  image:
                    type: string
                    example: ''
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
                  description: Прикрепленный к multipart form-data файл
                name:
                  type: string
                  description: 'max:255 Имя.'
                  example: Name
                last_name:
                  type: string
                  description: 'max:255 Фамилия.'
                  example: Surname
                email:
                  type: string
                  description: 'unique email max:255 Адрес эл.почты.'
                  example: test@test.com
                gender:
                  type: integer
                  description: 'Пол (1 - мужской, 2 - женский).'
                  example: 2
                height:
                  type: integer
                  description: 'min:50 max:300 Рост.'
                  example: 164
                weight:
                  type: number
                  description: 'min:25 max:635 Вес.'
                  example: 51
                age:
                  type: integer
                  description: 'min:1 max:150 Возраст.'
                  example: 30
                is_pregnant:
                  type: boolean
                  description: Беременность - для женского пола.
                  example: false
                is_lactation:
                  type: boolean
                  description: Лактация - для женского пола.
                  example: false
              required:
                - name
                - last_name
                - email
                - gender
                - height
                - weight
                - age
  /user/norms:
    patch:
      summary: 21.8. Редактирование норм пользователя.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 10
                  email: test1@test.ru
                  name: name
                  last_name: Surname
                  gender: 2
                  height: 87
                  weight: 90
                  age: 30
                  target: 1
                  activity: 1
                  is_pregnant: true
                  is_lactation: false
                  kkal: 500
                  proteins: 10
                  fats: 60
                  carbohydrates: 30
                  water: 2.3
                  facebook_id: facebookid
                  google_id: googleid
                  apple_login: false
                  image: ''
                properties:
                  id:
                    type: integer
                    example: 10
                  email:
                    type: string
                    example: test1@test.ru
                  name:
                    type: string
                    example: name
                  last_name:
                    type: string
                    example: Surname
                  gender:
                    type: integer
                    example: 2
                  height:
                    type: integer
                    example: 87
                  weight:
                    type: integer
                    example: 90
                  age:
                    type: integer
                    example: 30
                  target:
                    type: integer
                    example: 1
                  activity:
                    type: integer
                    example: 1
                  is_pregnant:
                    type: boolean
                    example: true
                  is_lactation:
                    type: boolean
                    example: false
                  kkal:
                    type: integer
                    example: 500
                  proteins:
                    type: integer
                    example: 10
                  fats:
                    type: integer
                    example: 60
                  carbohydrates:
                    type: integer
                    example: 30
                  water:
                    type: number
                    example: 2.3
                  facebook_id:
                    type: string
                    example: facebookid
                  google_id:
                    type: string
                    example: googleid
                  apple_login:
                    type: boolean
                    example: false
                  image:
                    type: string
                    example: ''
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                target:
                  type: integer
                  description: '[1,2,3,4,5] Цель по весу (1 - Интенсивно худеем,2 - Умеренно худеем, 3 - Поддерживаем вес, 4 - Умеренно набираем, 5 - Интенсивно набираем).'
                  example: 3
                activity:
                  type: integer
                  description: '[1,2,3,4] Уровень активности (1 - Минимальная,2 - Легкая, 3 - Средняя, 4 - Высокая).'
                  example: 3
                kkal:
                  type: integer
                  description: 'min:500 max:5000 Калории.'
                  example: 2500
                proteins:
                  type: integer
                  description: 'min:0 max:100 Белки.'
                  example: 35
                fats:
                  type: integer
                  description: 'min:0 max:100 Жиры.'
                  example: 35
                carbohydrates:
                  type: integer
                  description: 'min:0 max:100 Углеводы. Сумма БЖУ должна быть 100.'
                  example: 30
                water:
                  type: decimal
                  description: '1,1 required min:1 max:5 Калории.'
                  example: '2.5'
              required:
                - target
                - activity
                - kkal
                - proteins
                - fats
                - carbohydrates
  /user/checkPassword:
    post:
      summary: 21.16. Проверка старого пароля перед сменой пароля.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  is_correct: true
                properties:
                  is_correct:
                    type: boolean
                    example: true
                    description: Флаг правильности пароля.
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: Текущий пароль пользователя.
                  example: abc123
              required:
                - old_password
  /user/password:
    patch:
      summary: 21.17. Смена пароля авторизованного пользователя.
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  token: eyJ0e...YNwSeasbUfIuztjU
                properties:
                  token:
                    type: string
                    example: eyJ0e...YNwSeasbUfIuztjU
                    description: Новый токен.
      tags:
        - User - Пользователи
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: Текущий пароль пользователя.
                  example: abc123
                password:
                  type: string
                  description: Новый пароль.
                  example: new_abc123
                password_confirmation:
                  type: string
                  description: Повторение нового пароля.
                  example: new_abc123
              required:
                - old_password
                - password
                - password_confirmation
  '/code/{entity}/{id}':
    get:
      summary: |-
        12.1. Код для экспорта блюда или плана питания
        В урл entity dish|plan|course
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 123abc
                properties:
                  code:
                    type: string
                    example: 123abc
                    description: Код
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                    description: Код
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                    description: Код
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                    description: Код
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Импорт/экспорт
    parameters:
      - in: path
        name: entity
        description: 'Optional parameter. string required Тип объекта, для которого получаем код: dish-блюдо, plan- план питания.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: dish
      - in: path
        name: id
        description: 'Optional parameter. integer required Идентификатор объекта, для которого получаем код.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: '1'
  '/code/{code}':
    post:
      summary: |-
        12.2. Импорт блюда, плана питания, курса
        Пользователю нельзя импортировать то, автором чего он является - "Not allowed to import own objects"
        Если state exist показывать сообщение, что уже импортировали
      description: ''
      parameters:
        - in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
        - in: header
          name: Accept-Language
          description: ''
          example: ru
          schema:
            type: string
        - in: header
          name: Tz
          description: ''
          example: Europe/Kiev
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              schema:
                type: object
                example:
                  entity: dish
                  id: 1
                  state: new
                properties:
                  entity:
                    type: string
                    example: dish
                    description: 'Тип сущности, которую импортируют: dish-блюдо, plan- план питания'
                  id:
                    type: integer
                    example: 1
                    description: Идентификатор импортированного объекта
                  state:
                    type: string
                    example: new
                    description: 'Статус импортированного объекта: new-импортируем впервые, exist-был импортирован ранее, restored-был импортирован, затем удален, теперь восстановлен'
        '400':
          description: '400'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 400
                  message: BAD_REQUEST
                properties:
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: BAD_REQUEST
        '401':
          description: '401'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 401
                  message: UNAUTHORIZED
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: UNAUTHORIZED
        '404':
          description: '404'
          content:
            application/json:
              schema:
                type: object
                example:
                  code: 404
                  message: NOT_FOUND
                properties:
                  code:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: NOT_FOUND
      tags:
        - Импорт/экспорт
    parameters:
      - in: path
        name: code
        description: Optional parameter. string required Код для импорта.
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: When the value is omitted
            value: ''
          present:
            summary: When the value is present
            value: 123abc

components:
  schemas:
    Template:
      type: object
      properties:
        day:
          type: string
          description: Дата для которой будет генерироваться меню
          example: "2021-06-30"
        in_shoplist:
          type: boolean
          example: "0"
        eatings:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                description: ID приема пищи
                example: 150
              name:
                type: string
                description: Название приема пищи
                example: "Завтрак"
              time:
                type: string
                description: Время приема пищи
                example: "13:00:00"
              kkal:
                type: string
                description: Сумма калорий продуктов находящихся в приеме пищи
                example: "543"
              proteins:
                type: string
                description: Сумма граммов белков продуктов находящихся в приеме пищи
                example: "8.47"
              fats:
                type: string
                description: Сумма граммов жиров продуктов находящихся в приеме пищи
                example: "5.37"
              carbohydrates:
                type: string
                description: Сумма граммов углеводов продуктов находящихся в приеме пищи
                example: "5.25"
              contains:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID Продукта
                      example: 150
                    type:
                      type: string
                      description: Тип питания Продукт или Блюдо
                      example: "product"
                    name:
                      type: string
                      description: Название продукта/блюда
                      example: "Авокадо"
                    image:
                      type: string
                      description: Изображение продукта/блюда
                      example: "https://test.prepro.top/storage/uploads/product/0/407-product20200722202003.jpg"
                    measure:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: ID еденицы измерения
                          example: 1
                        name:
                          type: string
                          description: Сокращенное название еденицы измерения
                          example: "г"
                    main_unit:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: ID еденицы измерения
                          example: 1
                        name:
                          type: string
                          description: Название еденицы измерения
                          example: "граммы"
                        short:
                          type: string
                          description: Сокращенное название еденицы измерения
                          example: "г"
                        type:
                          type: string
                          description: Тип измирения количества Продукта (Еденица измирения - "1", Мера - "2")
                          example: "1"
                        q_min:
                          type: string
                          description: Минимальное значение на Ползунке выбора количества
                          example: "1"
                        q_max:
                          type: string
                          description: Максимальное значение на Ползунке выбора количества
                          example: "500"
                        q_step:
                          type: string
                          description: Шаг изменения значения на Ползунке выбора количества
                          example: "5"
                        q_qtt:
                          type: string
                          description: Дефолтное значение на Ползунке выбора количества
                          example: "100"
                        koef_gramm:
                          type: string
                          description: Коэффициент перевода любой Единицы измерения/Меры в граммы. Так как основная единица измерения в системе это граммы, поэтому остальные единицы и меры должны иметь коэффициент перевода в граммы.
                          example: "1.5"
                    measures:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: ID меры
                          example: 1
                        name:
                          type: string
                          description: Название меры
                          example: "чайная ложка"
                        short:
                          type: string
                          description: Сокращенное название меры
                          example: "ч.л."
                        type:
                          type: string
                          description: Тип измирения количества Продукта (Еденица измирения - "1", Мера - "2")
                          example: "2"
                        q_min:
                          type: string
                          description: Минимальное значение на Ползунке выбора количества
                          example: "1"
                        q_max:
                          type: string
                          description: Максимальное значение на Ползунке выбора количества
                          example: "500"
                        q_step:
                          type: string
                          description: Шаг изменения значения на Ползунке выбора количества
                          example: "5"
                        q_qtt:
                          type: string
                          description: Дефолтное значение на Ползунке выбора количества
                          example: "100"
                        koef_gramm:
                          type: string
                          description: Коэффициент перевода любой Единицы измерения/Меры в граммы. Так как основная единица измерения в системе это граммы, поэтому остальные единицы и меры должны иметь коэффициент перевода в граммы.
                          example: "1.5"
                    qtt:
                      type: string
                      description: Количество продукта в меню дня
                      example: "120"
                    kkal:
                      type: string
                      description: Количество калорий продукта в меню дня
                      example: "324"
                    proteins:
                      type: string
                      description: Количество граммов белков в продукте
                      example: "8.47"
                    fats:
                      type: string
                      description: Количество жиров белков в продукте
                      example: "5.37"
                    carbohydrates:
                      type: string
                      description: Количество углеводов белков в продукте
                      example: "5.25"


    Userqq:
      type: object
      properties:
        norma_kkal:
          type: string
          description: Норма калорий пользователя. Определяется по формуле исходя из его веса, роста, возраста и пола
          example: "1700"
        norma_gram_proteins:
          type: string
          description: Норма белка пользователя в граммах. Высчитывается исходя из установленного пользователем процента калорий, которые необходимо получать из белка. 1/4 от количества калорий
          example: "200"
        norma_gram_fats:
          type: string
          description: Норма жиров пользователя в граммах. Высчитывается исходя из установленного пользователем процента калорий, которые необходимо получать из жиров. 1/9 от количества калорий
          example: "200"
        norma_gram_carbohydrates:
          type: string
          description: Норма углеводов пользователя в граммах. Высчитывается исходя из установленного пользователем процента калорий, которые необходимо получать из углеводов. 1/4 от количества калорий
          example: "200"
    Menuqq:
      type: object
      properties:
        day:
          type: string
          description: Дата для которой будет генерироваться меню
          example: "2021-06-30"
        in_shoplist:
          type: boolean
          example: "0"
          description: Находятся ли продукты дня в Списке покупок. При генерировании меню продукты впервые попадают в предложенную дату, а значит они изначально всегда будут в значении false (то есть не в списке покупок). Только после того как алгоритм предложит меню, пользователь может добавлять предложенные продукты в список покупок.
        eatings:
          description: Приемы пищи
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 150
              name:
                type: string
                description: Прием пищи
                example: Завтрак
